"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./public/walletActions.ts":
/*!*********************************!*\
  !*** ./public/walletActions.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateCountdown: () => (/* binding */ calculateCountdown),\n/* harmony export */   claimTokens: () => (/* binding */ claimTokens),\n/* harmony export */   send: () => (/* binding */ send)\n/* harmony export */ });\n/* harmony import */ var _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @hyperionbt/helios */ \"./node_modules/@hyperionbt/helios/helios.js\");\n/* harmony import */ var _common_network__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/network */ \"./common/network.ts\");\n/* harmony import */ var _contracts_GameReward_hl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contracts/GameReward.hl */ \"./contracts/GameReward.hl\");\n/* harmony import */ var _contracts_GameRewardCbor1_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../contracts/GameRewardCbor1.json */ \"./contracts/GameRewardCbor1.json\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n // Ensure correct path to your contract\nconst optimize = false;\nfunction calculateCountdown() {\n    const TimeBeginContract = 1736073600000;\n    const TimeNow = Math.floor(Date.now());\n    const CYCLE_DURATION = 600 // 10 minutes \n    ;\n    const offsetInMs = 89680;\n    const elapsedTime = TimeNow - offsetInMs - TimeBeginContract;\n    const elapsedTimeInSeconds = elapsedTime / 1000;\n    const positionInCycle = elapsedTimeInSeconds % CYCLE_DURATION;\n    return positionInCycle;\n}\n // { cborHex: \"4e4d010000...\" }\nasync function claimTokens(walletAPI, setIsLoading, setTx) {\n    setIsLoading(true);\n    if (!walletAPI) {\n        throw new Error(\"Wallet API is not set.\");\n    }\n    try {\n        var _benefitiary_pubKeyHash, _benefitiary_pubKeyHash1;\n        const cip30WalletAPI = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Cip30Wallet(walletAPI);\n        const walletHelper = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.WalletHelper(cip30WalletAPI);\n        // Read in the network parameter file\n        const networkParamsJson = await (0,_common_network__WEBPACK_IMPORTED_MODULE_0__.getNetworkParams)(_common_network__WEBPACK_IMPORTED_MODULE_0__.network);\n        const networkParams = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.NetworkParams(networkParamsJson);\n        const policyId = \"14e7b7007657c191963cc016425fdca02b397b5b31784ba2637ecad3\";\n        const name = Buffer.from(\"BERT\", 'utf8').toString('hex');\n        const mph = _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.MintingPolicyHash.fromHex(policyId);\n        const assetClass = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.AssetClass({\n            mph: mph,\n            tokenName: name\n        });\n        console.log(assetClass);\n        const utxos = await walletHelper.getUtxos();\n        console.log(\"utxos\" + utxos);\n        // Get change address\n        const benefitiary = await walletHelper.changeAddress;\n        // Load in the vesting validator script (program)\n        const cborHex = _contracts_GameRewardCbor1_json__WEBPACK_IMPORTED_MODULE_2__.cborHex;\n        //const compiledProgram = Program.new(cborHex); \n        //const uplcProgram = new NativeScript(cborHex as unknown as number);\n        const uplcProgram = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.UplcProgram(cborBytes).readProgram();\n        //console.log(\"compiledProgram\" + compiledProgram);\n        console.log(\"benefitiary.pubKeyHash?.hex!)\" + ((_benefitiary_pubKeyHash = benefitiary.pubKeyHash) === null || _benefitiary_pubKeyHash === void 0 ? void 0 : _benefitiary_pubKeyHash.hex));\n        //const gameReward = new GameReward();\n        // Compile the vesting validator\n        //const compiledProgram = gameReward.compile(optimize);\n        console.log(\"Wallet address: \" + benefitiary);\n        const scriptAddress = _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Address.fromBech32(\"addr1wyqnajaxfvkt3juwkem5zdsgxm49etza5chhx6ys4ac6lkcu5ngh4\");\n        console.log(scriptAddress.toBech32());\n        console.log(\"Script Address:\" + scriptAddress);\n        console.dir(scriptAddress, {\n            depth: null\n        });\n        const datumObject = {\n            benefitiary: benefitiary.pubKeyHash\n        };\n        const gameDatum = createGameDatum(benefitiary.pubKeyHash.hex);\n        console.log(\"gameDatum\" + JSON.stringify(gameDatum));\n        // const gameDatum = new gameReward.types.Datum(\n        //   benefitiary.pubKeyHash,\n        // )\n        // Create the vesting claim redeemer\n        //  const redeember = (new gameReward.types.Redeemer.Claim(benefitiary.pubKeyHash))\n        //  ._toUplcData();\n        const claimRedeemer = createClaimRedeemer(benefitiary.pubKeyHash.hex);\n        console.log(\"claimRedeemerData\" + claimRedeemer.data);\n        console.log(\"claimRedeemer\" + claimRedeemer);\n        //console.log(filteredUtxos);\n        const tx = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Tx();\n        const sortedUtxos = await fetchUtxos(scriptAddress.toBech32());\n        const CLAIM_WINDOW = 20; // 20 seconds \n        const positionInCycle = calculateCountdown();\n        console.log(\"positionInCycle\" + positionInCycle);\n        window.onerror = ()=>positionInCycle < CLAIM_WINDOW;\n        //const dynamicReward = calculateReward(Number(remainingSupply), TOTAL_SUPPLY, BASE_REWARD);\n        const testValueBenefitiary = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Assets([\n            [\n                assetClass,\n                BigInt(sortedUtxos.dynamicReward)\n            ]\n        ]);\n        //const totalAmountUtxo = getTokenAmountFromUtxos(sortedUtxos.selected, assetClass);\n        const amountToSendBack = BigInt(sortedUtxos.totalAmount) - BigInt(sortedUtxos.dynamicReward);\n        const firstPartToSendBack = amountToSendBack / 2n; // First part is half of the total amount\n        const secondPartToSendBack = amountToSendBack - firstPartToSendBack; // Second part is the remainder\n        console.log(\"First \" + firstPartToSendBack);\n        console.log(\"Sevond \" + secondPartToSendBack);\n        console.log(sortedUtxos.dynamicReward);\n        const valueContract1 = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Assets([\n            [\n                assetClass,\n                firstPartToSendBack\n            ]\n        ]);\n        const valueContract2 = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Assets([\n            [\n                assetClass,\n                secondPartToSendBack\n            ]\n        ]);\n        //tx.addInputs(utxos[0]);\n        tx.addInputs(sortedUtxos.selected, claimRedeemer.data);\n        tx.attachScript(uplcProgram);\n        var userClaimOutput = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.TxOutput(benefitiary, new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Value(undefined, testValueBenefitiary), _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Datum.inline(new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.ConstrData(0, [\n            new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.ByteArrayData((0,_hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)((_benefitiary_pubKeyHash1 = benefitiary.pubKeyHash) === null || _benefitiary_pubKeyHash1 === void 0 ? void 0 : _benefitiary_pubKeyHash1.hex))\n        ])));\n        tx.addOutput(userClaimOutput);\n        //Shiiit, fix. Someone could rediredt the rest of the tokens\n        // const addressStr = \"addr_test1qrarqhmklnhwcw3q0zm6sgm3g3l7pua0y36sql9k5ru8dsucglsked5f5yrcf9e9xgxjgmt7xk52knh8h0dgayc00arqlh7g60\";\n        // const address = Address.fromBech32(addressStr);\n        // tx.addOutput(new TxOutput(\n        //   address,\n        //   new Value(undefined, testValueContract) // The amount being claimed\n        // ));\n        // Calculate total ADA in the selected script inputs\n        let totalAdaInInputs = BigInt(0);\n        sortedUtxos.selected.forEach((utxo)=>{\n            totalAdaInInputs += BigInt(utxo.output.value.lovelace);\n        });\n        // Distribute ADA equally (or as required) among script outputs\n        const adaPerScriptOutput = totalAdaInInputs / 2n; // Assuming two script outputs\\\n        if (amountToSendBack != BigInt(0)) {\n            var _benefitiary_pubKeyHash2, _benefitiary_pubKeyHash3;\n            var scriptUtxo1 = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.TxOutput(scriptAddress, new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Value(adaPerScriptOutput, valueContract1), _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Datum.inline(new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.ConstrData(0, [\n                new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.ByteArrayData((0,_hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)((_benefitiary_pubKeyHash2 = benefitiary.pubKeyHash) === null || _benefitiary_pubKeyHash2 === void 0 ? void 0 : _benefitiary_pubKeyHash2.hex))\n            ])));\n            tx.addOutput(scriptUtxo1);\n            var scriptUtxo2 = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.TxOutput(scriptAddress, new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Value(totalAdaInInputs - adaPerScriptOutput, valueContract2), _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Datum.inline(new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.ConstrData(0, [\n                new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.ByteArrayData((0,_hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)((_benefitiary_pubKeyHash3 = benefitiary.pubKeyHash) === null || _benefitiary_pubKeyHash3 === void 0 ? void 0 : _benefitiary_pubKeyHash3.hex))\n            ])));\n            tx.addOutput(scriptUtxo2);\n        }\n        //var inputFees = await walletHelper.pickUtxos(new Value(tokenAmountFees));\n        //tx.addInputs(inputFees[0]);\n        console.log(\"We attatched everything!\");\n        await tx.finalize(networkParams, benefitiary, utxos);\n        console.log(\"dali finalizirahme?\");\n        // Sign the unsigned tx to get the witness\n        const signatures = await cip30WalletAPI.signTx(tx);\n        tx.addSignatures(signatures);\n        console.log(\"Dali q signirahme?\");\n        const txHash = await cip30WalletAPI.submitTx(tx);\n        setTx({\n            txId: txHash.hex\n        });\n        setIsLoading(false);\n    } catch (err) {\n        setIsLoading(false);\n        console.error(\"submit tx failed\", err);\n        throw err;\n    }\n}\nasync function send(walletAPI, setIsLoading, setTx) {\n    setIsLoading(true);\n    if (!walletAPI) {\n        throw console.error(\"walletAPI is not set\");\n    }\n    try {\n        const cip30WalletAPI = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Cip30Wallet(walletAPI);\n        // const blockfrost = new BlockFrostIPFS({\n        //   network: network,\n        //   projectId: \"preprodJExO0MAMRgfpXz9Il4IqB2u9ddoylZBT\",\n        // });\n        console.log(\"gmmm\");\n        const walletHelper = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.WalletHelper(cip30WalletAPI);\n        const policyId = \"14e7b7007657c191963cc016425fdca02b397b5b31784ba2637ecad3\";\n        const name = Buffer.from(\"BERT\", 'utf8').toString('hex');\n        const mph = _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.MintingPolicyHash.fromHex(policyId);\n        const assetClass = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.AssetClass({\n            mph: mph,\n            tokenName: name // Convert to hex string\n        });\n        console.log(assetClass);\n        const minAda = 1000000; // minimum lovelace to send\n        const minAdaVal = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Value(BigInt(minAda));\n        const testValueScript = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Assets([\n            [\n                assetClass,\n                BigInt(125550)\n            ]\n        ]);\n        // Get wallet UTXOs\n        const utxos = await walletHelper.pickUtxos(new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Value(undefined, testValueScript));\n        console.log(utxos);\n        // Get change address\n        const benefitiary = await walletHelper.changeAddress;\n        // Load in the vesting validator script (program)\n        const gameReward = new _contracts_GameReward_hl__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n        // Compile the vesting validator\n        const compiledProgram = gameReward.compile(optimize);\n        console.log(\"Wallet address: \" + benefitiary);\n        const scriptAddress = _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Address.fromHashes(compiledProgram.validatorHash);\n        //remove\n        console.log(scriptAddress.toBech32());\n        console.log(\"Script Address:\" + scriptAddress);\n        // Construct the vesting datum\n        const gameDatum = new gameReward.types.Datum(benefitiary.pubKeyHash);\n        //const redeember = (new gameReward.types.Redeemer.Claim())._toUplcData();\n        const tx = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Tx();\n        tx.addInputs(utxos[0]);\n        tx.addOutput(new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.TxOutput(scriptAddress, new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Value(undefined, testValueScript), _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Datum.inline(gameDatum)));\n        // tx.addOutput(new TxOutput(\n        //   benefitiary,\n        //   minAdaVal,\n        // ));\n        console.log(\"We attatched everything!\");\n        // Read in the network parameter file\n        const networkParamsJson = await (0,_common_network__WEBPACK_IMPORTED_MODULE_0__.getNetworkParams)(_common_network__WEBPACK_IMPORTED_MODULE_0__.network);\n        const networkParams = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.NetworkParams(networkParamsJson);\n        // Send any change back to the buyer\n        await tx.finalize(networkParams, benefitiary, utxos[1]);\n        // Sign the unsigned tx to get the witness\n        const signatures = await cip30WalletAPI.signTx(tx);\n        tx.addSignatures(signatures);\n        console.log(\"signed\");\n        // Submit the signed tx\n        const txHash = await cip30WalletAPI.submitTx(tx);\n        setTx({\n            txId: txHash.hex\n        });\n        setIsLoading(false);\n    } catch (err) {\n        setIsLoading(false);\n        throw console.error(\"submit tx failed\", err);\n    }\n}\nasync function fetchUtxos(scriptAddress) {\n    const response = await fetch(\"/api/getUtxos\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            scriptAddress\n        })\n    });\n    const data = await response.json(); // Raw JSON array from backend\n    // `Convert JSON back to TxInput objects\n    const selectedUtxos = data.selected.map((utxo)=>_hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.TxInput.fromFullCbor(utxo));\n    const dynamicReward = BigInt(data.dynamicReward);\n    const totalAmount = BigInt(data.totalAmount);\n    console.log(\"selectedUtxos\" + selectedUtxos);\n    console.log(\"dynamicReward\" + dynamicReward);\n    console.log(\"totalAmount\" + totalAmount);\n    return {\n        selected: selectedUtxos,\n        totalAmount: totalAmount,\n        dynamicReward: dynamicReward\n    };\n}\nfunction createClaimRedeemer(pubKeyHashHex) {\n    // The \"Claim\" constructor might be tag=1 if it's the second in the enum\n    const tag = 1;\n    const field = [\n        new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.ByteArrayData((0,_hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(pubKeyHashHex))\n    ];\n    const constr = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.ConstrData(tag, field);\n    return new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Redeemer(constr);\n}\nfunction createGameDatum(benefitiaryHashHex) {\n    // If this struct has only one field, typically it's tag=0\n    const tag = 0;\n    const field = [\n        new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.ByteArrayData((0,_hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(benefitiaryHashHex))\n    ];\n    const cd = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.ConstrData(tag, field);\n    return _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.Datum.inline(cd);\n}\nfunction parsePlutusCbor(cborHex) {\n    // If your Helios version supports UplcProgram.unpack():\n    return _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_3__.UplcProgram.fromCbor(cborHex);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU1FLGNBQXNCSCxPQUFPUixLQUFLVyxXQUFXO0lBQ25EbEMsUUFBUUMsR0FBRyxDQUFDLGtCQUFpQmdGO0lBQzdCakYsUUFBUUMsR0FBRyxDQUFDLGtCQUFrQitCO0lBQzlCaEMsUUFBUUMsR0FBRyxDQUFDLGdCQUFlaUM7SUFFM0IsT0FBTztRQUNMTSxVQUFVeUM7UUFDVi9DLGFBQWFBO1FBQ2JGLGVBQWVBO0lBQ2pCO0FBQ0Y7QUFHQSxTQUFTVixvQkFBb0I4RCxhQUFxQjtJQUNoRCx3RUFBd0U7SUFDeEUsTUFBTUMsTUFBTTtJQUNaLE1BQU1DLFFBQVE7UUFBQyxJQUFJNUgsNkRBQWFBLENBQUNDLDhEQUFVQSxDQUFDeUg7S0FBZ0I7SUFDNUQsTUFBTUcsU0FBUyxJQUFJOUgsMERBQVVBLENBQUM0SCxLQUFLQztJQUNuQyxPQUFPLElBQUloSSx3REFBUUEsQ0FBQ2lJO0FBQ3RCO0FBRUEsU0FBU3JFLGdCQUFnQnNFLGtCQUEwQjtJQUNqRCwwREFBMEQ7SUFDMUQsTUFBTUgsTUFBTTtJQUNaLE1BQU1DLFFBQVE7UUFBQyxJQUFJNUgsNkRBQWFBLENBQUNDLDhEQUFVQSxDQUFDNkg7S0FBcUI7SUFDakUsTUFBTUMsS0FBSyxJQUFJaEksMERBQVVBLENBQUM0SCxLQUFLQztJQUMvQixPQUFPckkscURBQUtBLENBQUMyRixNQUFNLENBQUM2QztBQUN0QjtBQUVBLFNBQVNDLGdCQUFnQnJGLE9BQWU7SUFDdEMsd0RBQXdEO0lBQ3hELE9BQU9oRCwyREFBV0EsQ0FBQ3NJLFFBQVEsQ0FBQ3RGO0FBQzlCIiwic291cmNlcyI6WyJEOlxcVWx0aW1hdGUtQ2FyZGFuby1TbWFydC1Db250cmFjdHNcXEZsYXBweUJpcmRHYW1lXFxoZWxpb3NcXEdhbWVSZXdhcmRcXHB1YmxpY1xcd2FsbGV0QWN0aW9ucy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBcclxuICAgIE5ldHdvcmtQYXJhbXMsXHJcbiAgICBWYWx1ZSxcclxuICAgIFR4T3V0cHV0LFxyXG4gICAgVHgsXHJcbiAgICBUeElucHV0LFxyXG4gICAgQ2lwMzBXYWxsZXQsXHJcbiAgICBEYXR1bSxcclxuICAgIEFzc2V0cyxcclxuICAgIFdhbGxldEhlbHBlcixcclxuICAgIE1pbnRpbmdQb2xpY3lIYXNoLFxyXG4gICAgVXBsY1Byb2dyYW0sXHJcbiAgICBSZWRlZW1lcixcclxuICAgIEFzc2V0Q2xhc3MsXHJcbiAgICBQdWJLZXlIYXNoLFxyXG4gICAgQWRkcmVzcyxcclxuICAgIENvbnN0ckRhdGEsXHJcbiAgICBOYXRpdmVTY3JpcHQsXHJcbiAgICBCeXRlQXJyYXlEYXRhLFxyXG4gICAgaGV4VG9CeXRlcyxcclxuICB9IGZyb20gXCJAaHlwZXJpb25idC9oZWxpb3NcIjtcclxuICBpbXBvcnQgeyBuZXR3b3JrLCBnZXROZXR3b3JrUGFyYW1zIH0gZnJvbSAnLi4vY29tbW9uL25ldHdvcmsnO1xyXG4gIGltcG9ydCBHYW1lUmV3YXJkIGZyb20gJy4uL2NvbnRyYWN0cy9HYW1lUmV3YXJkLmhsJzsgLy8gRW5zdXJlIGNvcnJlY3QgcGF0aCB0byB5b3VyIGNvbnRyYWN0XHJcbiAgXHJcbiAgY29uc3Qgb3B0aW1pemUgPSBmYWxzZTtcclxuICBcclxuICBleHBvcnQgZnVuY3Rpb24gY2FsY3VsYXRlQ291bnRkb3duKCk6IG51bWJlciB7XHJcbiAgXHJcbiAgICBjb25zdCBUaW1lQmVnaW5Db250cmFjdCA9IDE3MzYwNzM2MDAwMDA7XHJcblxyXG4gICAgY29uc3QgVGltZU5vdzogbnVtYmVyID0gTWF0aC5mbG9vcihEYXRlLm5vdygpKTsgXHJcbiAgICBjb25zdCBDWUNMRV9EVVJBVElPTiA9IDYwMCAvLyAxMCBtaW51dGVzIFxyXG4gICAgY29uc3Qgb2Zmc2V0SW5NcyA9IDg5NjgwO1xyXG4gICAgY29uc3QgZWxhcHNlZFRpbWUgPSBUaW1lTm93IC0gKG9mZnNldEluTXMpIC0gVGltZUJlZ2luQ29udHJhY3Q7XHJcbiAgICBjb25zdCBlbGFwc2VkVGltZUluU2Vjb25kcyA9IGVsYXBzZWRUaW1lIC8gMTAwMDtcclxuICAgIGNvbnN0IHBvc2l0aW9uSW5DeWNsZSA9IGVsYXBzZWRUaW1lSW5TZWNvbmRzICUgQ1lDTEVfRFVSQVRJT047XHJcbiAgXHJcbiAgICByZXR1cm4gcG9zaXRpb25JbkN5Y2xlO1xyXG4gIH0gXHJcbiAgXHJcbiAgLy8gVGhlIEhlbGlvcyBjb250cmFjdCBzYXlzOiBzdHJ1Y3QgRGF0dW0geyBiZW5lZml0aWFyeTogUHViS2V5SGFzaCB9XHJcbiAgZXhwb3J0IGludGVyZmFjZSBHYW1lRGF0dW0ge1xyXG4gICAgYmVuZWZpdGlhcnk6IFB1YktleUhhc2g7IC8vIFRoZSBwdWJLZXlIYXNoIGFzIGEgaGV4IHN0cmluZ1xyXG4gIH1cclxuXHJcbiAgLy8gVGhlIEhlbGlvcyBjb250cmFjdCBzYXlzOiBlbnVtIFJlZGVlbWVyIHsgQ2FuY2VsLCBDbGFpbSB7IHJlY2VwaWFudDogUHViS2V5SGFzaCB9IH1cclxuICBleHBvcnQgaW50ZXJmYWNlIEdhbWVSZWRlZW1lckNsYWltIHtcclxuICAgIF9fdGFnOiBcIkNsYWltXCI7XHJcbiAgICByZWNlcGlhbnQ6IHN0cmluZzsgLy8gVGhlIHNhbWUgcHViS2V5SGFzaCBpbiBoZXhcclxuICB9XHJcbiAgaW1wb3J0IEdBTUVfUkVXQVJEX0NCT1JfSlNPTiBmcm9tICcuLi9jb250cmFjdHMvR2FtZVJld2FyZENib3IxLmpzb24nOyAvLyB7IGNib3JIZXg6IFwiNGU0ZDAxMDAwMC4uLlwiIH1cclxuXHJcbiAgZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNsYWltVG9rZW5zKHdhbGxldEFQSTogYW55LCBzZXRJc0xvYWRpbmc6ICh2YWw6IGJvb2xlYW4pID0+IHZvaWQsIHNldFR4OiAodmFsOiB7dHhJZDogc3RyaW5nfSkgPT4gdm9pZCkge1xyXG4gICAgc2V0SXNMb2FkaW5nKHRydWUpO1xyXG5cclxuICAgIGlmICghd2FsbGV0QVBJKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiV2FsbGV0IEFQSSBpcyBub3Qgc2V0LlwiKTtcclxuICAgIH1cclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IGNpcDMwV2FsbGV0QVBJID0gbmV3IENpcDMwV2FsbGV0KHdhbGxldEFQSSk7XHJcblxyXG4gICAgICBjb25zdCB3YWxsZXRIZWxwZXIgPSBuZXcgV2FsbGV0SGVscGVyKGNpcDMwV2FsbGV0QVBJKTtcclxuICAgICAgLy8gUmVhZCBpbiB0aGUgbmV0d29yayBwYXJhbWV0ZXIgZmlsZVxyXG4gICAgICBjb25zdCBuZXR3b3JrUGFyYW1zSnNvbiA9IGF3YWl0IGdldE5ldHdvcmtQYXJhbXMobmV0d29yayk7XHJcbiAgICAgIGNvbnN0IG5ldHdvcmtQYXJhbXMgPSBuZXcgTmV0d29ya1BhcmFtcyhuZXR3b3JrUGFyYW1zSnNvbik7XHJcblxyXG4gICAgICBjb25zdCBwb2xpY3lJZCA9IFwiMTRlN2I3MDA3NjU3YzE5MTk2M2NjMDE2NDI1ZmRjYTAyYjM5N2I1YjMxNzg0YmEyNjM3ZWNhZDNcIjtcclxuICAgICAgY29uc3QgbmFtZSA9IEJ1ZmZlci5mcm9tKFwiQkVSVFwiLCAndXRmOCcpLnRvU3RyaW5nKCdoZXgnKTtcclxuXHJcbiAgICAgIGNvbnN0IG1waCA9IE1pbnRpbmdQb2xpY3lIYXNoLmZyb21IZXgocG9saWN5SWQpO1xyXG5cclxuICAgICAgY29uc3QgYXNzZXRDbGFzcyA9IG5ldyBBc3NldENsYXNzKHtcclxuICAgICAgICBtcGg6IG1waCwgXHJcbiAgICAgICAgdG9rZW5OYW1lOiBuYW1lXHJcbiAgICAgIH0pOyBcclxuXHJcbiAgICAgICAgY29uc29sZS5sb2coYXNzZXRDbGFzcylcclxuXHJcbiAgICAgIGNvbnN0IHV0eG9zID0gYXdhaXQgd2FsbGV0SGVscGVyLmdldFV0eG9zKCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwidXR4b3NcIiArIHV0eG9zKTtcclxuXHJcbiAgICAgIC8vIEdldCBjaGFuZ2UgYWRkcmVzc1xyXG4gICAgICBjb25zdCBiZW5lZml0aWFyeSA9IGF3YWl0IHdhbGxldEhlbHBlci5jaGFuZ2VBZGRyZXNzO1xyXG4gICAgICAvLyBMb2FkIGluIHRoZSB2ZXN0aW5nIHZhbGlkYXRvciBzY3JpcHQgKHByb2dyYW0pXHJcbiAgICAgIFxyXG4gICAgICBjb25zdCBjYm9ySGV4ID0gR0FNRV9SRVdBUkRfQ0JPUl9KU09OLmNib3JIZXg7IFxyXG4gICAgICAvL2NvbnN0IGNvbXBpbGVkUHJvZ3JhbSA9IFByb2dyYW0ubmV3KGNib3JIZXgpOyBcclxuICAgICAgLy9jb25zdCB1cGxjUHJvZ3JhbSA9IG5ldyBOYXRpdmVTY3JpcHQoY2JvckhleCBhcyB1bmtub3duIGFzIG51bWJlcik7XHJcbiAgICAgIGNvbnN0IHVwbGNQcm9ncmFtID0gbmV3IFVwbGNQcm9ncmFtKGNib3JCeXRlcykucmVhZFByb2dyYW0oKTtcclxuXHJcbiAgICAgIC8vY29uc29sZS5sb2coXCJjb21waWxlZFByb2dyYW1cIiArIGNvbXBpbGVkUHJvZ3JhbSk7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiYmVuZWZpdGlhcnkucHViS2V5SGFzaD8uaGV4ISlcIiArIGJlbmVmaXRpYXJ5LnB1YktleUhhc2g/LmhleCEpXHJcblxyXG4gICAgICAvL2NvbnN0IGdhbWVSZXdhcmQgPSBuZXcgR2FtZVJld2FyZCgpO1xyXG5cclxuICAgICAgLy8gQ29tcGlsZSB0aGUgdmVzdGluZyB2YWxpZGF0b3JcclxuICAgICAgLy9jb25zdCBjb21waWxlZFByb2dyYW0gPSBnYW1lUmV3YXJkLmNvbXBpbGUob3B0aW1pemUpO1xyXG4gICAgICBjb25zb2xlLmxvZyhcIldhbGxldCBhZGRyZXNzOiBcIiArIGJlbmVmaXRpYXJ5KVxyXG4gICAgICBjb25zdCBzY3JpcHRBZGRyZXNzID0gQWRkcmVzcy5mcm9tQmVjaDMyKFwiYWRkcjF3eXFuYWpheGZ2a3QzanV3a2VtNXpkc2d4bTQ5ZXR6YTVjaGh4NnlzNGFjNmxrY3U1bmdoNFwiKVxyXG4gICAgXHJcbiAgICAgIGNvbnNvbGUubG9nKHNjcmlwdEFkZHJlc3MudG9CZWNoMzIoKSk7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiU2NyaXB0IEFkZHJlc3M6XCIgKyBzY3JpcHRBZGRyZXNzKVxyXG4gICAgICBcclxuICAgICAgY29uc29sZS5kaXIoc2NyaXB0QWRkcmVzcywgeyBkZXB0aDogbnVsbCB9KTtcclxuXHJcbiAgICAgIGNvbnN0IGRhdHVtT2JqZWN0OiBHYW1lRGF0dW0gPSB7XHJcbiAgICAgICAgYmVuZWZpdGlhcnk6IGJlbmVmaXRpYXJ5LnB1YktleUhhc2ghXHJcbiAgICAgIH07XHJcblxyXG4gICAgICBjb25zdCBnYW1lRGF0dW0gPSBjcmVhdGVHYW1lRGF0dW0oYmVuZWZpdGlhcnkucHViS2V5SGFzaCEuaGV4KTtcclxuICAgICAgY29uc29sZS5sb2coXCJnYW1lRGF0dW1cIiArIEpTT04uc3RyaW5naWZ5KGdhbWVEYXR1bSkpXHJcblxyXG4gICAgICAvLyBjb25zdCBnYW1lRGF0dW0gPSBuZXcgZ2FtZVJld2FyZC50eXBlcy5EYXR1bShcclxuICAgICAgLy8gICBiZW5lZml0aWFyeS5wdWJLZXlIYXNoLFxyXG4gICAgICAvLyApXHJcblxyXG4gICAgICAgLy8gQ3JlYXRlIHRoZSB2ZXN0aW5nIGNsYWltIHJlZGVlbWVyXHJcbiAgICAgIC8vICBjb25zdCByZWRlZW1iZXIgPSAobmV3IGdhbWVSZXdhcmQudHlwZXMuUmVkZWVtZXIuQ2xhaW0oYmVuZWZpdGlhcnkucHViS2V5SGFzaCkpXHJcbiAgICAgIC8vICAuX3RvVXBsY0RhdGEoKTtcclxuXHJcbiAgICAgIGNvbnN0IGNsYWltUmVkZWVtZXIgPSBjcmVhdGVDbGFpbVJlZGVlbWVyKGJlbmVmaXRpYXJ5LnB1YktleUhhc2ghLmhleCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiY2xhaW1SZWRlZW1lckRhdGFcIiArIGNsYWltUmVkZWVtZXIuZGF0YSlcclxuICAgICAgY29uc29sZS5sb2coXCJjbGFpbVJlZGVlbWVyXCIgKyBjbGFpbVJlZGVlbWVyKVxyXG4gICAgICAvL2NvbnNvbGUubG9nKGZpbHRlcmVkVXR4b3MpO1xyXG4gICAgICBjb25zdCB0eCA9IG5ldyBUeCgpO1xyXG5cclxuICAgICAgY29uc3Qgc29ydGVkVXR4b3MgPSBhd2FpdCBmZXRjaFV0eG9zKHNjcmlwdEFkZHJlc3MudG9CZWNoMzIoKSlcclxuXHJcbiAgICAgIGNvbnN0IENMQUlNX1dJTkRPVyA9IDIwOyAvLyAyMCBzZWNvbmRzIFxyXG5cclxuICAgICAgY29uc3QgcG9zaXRpb25JbkN5Y2xlID0gY2FsY3VsYXRlQ291bnRkb3duKCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwicG9zaXRpb25JbkN5Y2xlXCIgKyBwb3NpdGlvbkluQ3ljbGUpO1xyXG4gICAgICB3aW5kb3cub25lcnJvciA9ICgpID0+IHBvc2l0aW9uSW5DeWNsZSA8IENMQUlNX1dJTkRPVztcclxuICAgICAgLy9jb25zdCBkeW5hbWljUmV3YXJkID0gY2FsY3VsYXRlUmV3YXJkKE51bWJlcihyZW1haW5pbmdTdXBwbHkpLCBUT1RBTF9TVVBQTFksIEJBU0VfUkVXQVJEKTtcclxuICAgICAgY29uc3QgdGVzdFZhbHVlQmVuZWZpdGlhcnk9IG5ldyBBc3NldHMoW1thc3NldENsYXNzLCBCaWdJbnQoc29ydGVkVXR4b3MuZHluYW1pY1Jld2FyZCldXSk7XHJcbiAgICAgIFxyXG4gICAgICAvL2NvbnN0IHRvdGFsQW1vdW50VXR4byA9IGdldFRva2VuQW1vdW50RnJvbVV0eG9zKHNvcnRlZFV0eG9zLnNlbGVjdGVkLCBhc3NldENsYXNzKTtcclxuICAgICAgY29uc3QgYW1vdW50VG9TZW5kQmFjayA9IEJpZ0ludChzb3J0ZWRVdHhvcy50b3RhbEFtb3VudCkgLSBCaWdJbnQoc29ydGVkVXR4b3MuZHluYW1pY1Jld2FyZCk7XHJcblxyXG4gICAgICBjb25zdCBmaXJzdFBhcnRUb1NlbmRCYWNrID0gYW1vdW50VG9TZW5kQmFjayAvIDJuOyAvLyBGaXJzdCBwYXJ0IGlzIGhhbGYgb2YgdGhlIHRvdGFsIGFtb3VudFxyXG4gICAgICBjb25zdCBzZWNvbmRQYXJ0VG9TZW5kQmFjayA9IGFtb3VudFRvU2VuZEJhY2sgLSBmaXJzdFBhcnRUb1NlbmRCYWNrOyAvLyBTZWNvbmQgcGFydCBpcyB0aGUgcmVtYWluZGVyXHJcbiAgICAgIGNvbnNvbGUubG9nKFwiRmlyc3QgXCIgKyBmaXJzdFBhcnRUb1NlbmRCYWNrKVxyXG4gICAgICBjb25zb2xlLmxvZyhcIlNldm9uZCBcIiArIHNlY29uZFBhcnRUb1NlbmRCYWNrKVxyXG4gICAgICBjb25zb2xlLmxvZyhzb3J0ZWRVdHhvcy5keW5hbWljUmV3YXJkKVxyXG5cclxuICAgICAgY29uc3QgdmFsdWVDb250cmFjdDE9IG5ldyBBc3NldHMoW1thc3NldENsYXNzLCBmaXJzdFBhcnRUb1NlbmRCYWNrXV0pO1xyXG4gICAgICBjb25zdCB2YWx1ZUNvbnRyYWN0Mj0gbmV3IEFzc2V0cyhbW2Fzc2V0Q2xhc3MsIHNlY29uZFBhcnRUb1NlbmRCYWNrXV0pO1xyXG5cclxuICAgICAgLy90eC5hZGRJbnB1dHModXR4b3NbMF0pO1xyXG4gICAgICB0eC5hZGRJbnB1dHMoc29ydGVkVXR4b3Muc2VsZWN0ZWQsIGNsYWltUmVkZWVtZXIuZGF0YSk7XHJcbiAgICAgIHR4LmF0dGFjaFNjcmlwdCh1cGxjUHJvZ3JhbSk7XHJcblxyXG4gICAgICB2YXIgdXNlckNsYWltT3V0cHV0ID0gbmV3IFR4T3V0cHV0KFxyXG4gICAgICAgIGJlbmVmaXRpYXJ5LFxyXG4gICAgICAgIG5ldyBWYWx1ZSh1bmRlZmluZWQsIHRlc3RWYWx1ZUJlbmVmaXRpYXJ5KSxcclxuICAgICAgICBEYXR1bS5pbmxpbmUoXHJcbiAgICAgICAgICBuZXcgQ29uc3RyRGF0YSgwLCBbIG5ldyBCeXRlQXJyYXlEYXRhKGhleFRvQnl0ZXMoYmVuZWZpdGlhcnkucHViS2V5SGFzaD8uaGV4ISkpIF0pXHJcbiAgICAgICAgKSk7XHJcblxyXG4gICAgICB0eC5hZGRPdXRwdXQodXNlckNsYWltT3V0cHV0KTtcclxuXHJcbiAgICBcclxuICAgIC8vU2hpaWl0LCBmaXguIFNvbWVvbmUgY291bGQgcmVkaXJlZHQgdGhlIHJlc3Qgb2YgdGhlIHRva2Vuc1xyXG4gICAgLy8gY29uc3QgYWRkcmVzc1N0ciA9IFwiYWRkcl90ZXN0MXFyYXJxaG1rbG5od2N3M3Ewem02c2dtM2czbDdwdWEweTM2c3FsOWs1cnU4ZHN1Y2dsc2tlZDVmNXlyY2Y5ZTl4Z3hqZ210N3hrNTJrbmg4aDBkZ2F5YzAwYXJxbGg3ZzYwXCI7XHJcbiAgICAvLyBjb25zdCBhZGRyZXNzID0gQWRkcmVzcy5mcm9tQmVjaDMyKGFkZHJlc3NTdHIpO1xyXG4gICAgLy8gdHguYWRkT3V0cHV0KG5ldyBUeE91dHB1dChcclxuICAgIC8vICAgYWRkcmVzcyxcclxuICAgIC8vICAgbmV3IFZhbHVlKHVuZGVmaW5lZCwgdGVzdFZhbHVlQ29udHJhY3QpIC8vIFRoZSBhbW91bnQgYmVpbmcgY2xhaW1lZFxyXG4gICAgLy8gKSk7XHJcbiAgICBcclxuICAgIC8vIENhbGN1bGF0ZSB0b3RhbCBBREEgaW4gdGhlIHNlbGVjdGVkIHNjcmlwdCBpbnB1dHNcclxuICAgIGxldCB0b3RhbEFkYUluSW5wdXRzID0gQmlnSW50KDApO1xyXG4gICAgc29ydGVkVXR4b3Muc2VsZWN0ZWQuZm9yRWFjaCh1dHhvID0+IHtcclxuICAgICAgICB0b3RhbEFkYUluSW5wdXRzICs9IEJpZ0ludCh1dHhvLm91dHB1dC52YWx1ZS5sb3ZlbGFjZSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBEaXN0cmlidXRlIEFEQSBlcXVhbGx5IChvciBhcyByZXF1aXJlZCkgYW1vbmcgc2NyaXB0IG91dHB1dHNcclxuICAgIGNvbnN0IGFkYVBlclNjcmlwdE91dHB1dCA9IHRvdGFsQWRhSW5JbnB1dHMgLyAybjsgLy8gQXNzdW1pbmcgdHdvIHNjcmlwdCBvdXRwdXRzXFxcclxuXHJcbiAgICBpZiAoYW1vdW50VG9TZW5kQmFjayAhPSBCaWdJbnQoMCkpe1xyXG4gICAgICB2YXIgc2NyaXB0VXR4bzEgPW5ldyBUeE91dHB1dChcclxuICAgICAgICBzY3JpcHRBZGRyZXNzLFxyXG4gICAgICAgIG5ldyBWYWx1ZShhZGFQZXJTY3JpcHRPdXRwdXQsIHZhbHVlQ29udHJhY3QxKSwgIC8vIFJlbWFpbmluZyB0cmVhc3VyeSB0b2tlbnNcclxuICAgICAgICBEYXR1bS5pbmxpbmUoXHJcbiAgICAgICAgICBuZXcgQ29uc3RyRGF0YSgwLCBbIG5ldyBCeXRlQXJyYXlEYXRhKGhleFRvQnl0ZXMoYmVuZWZpdGlhcnkucHViS2V5SGFzaD8uaGV4ISkpIF0pXHJcbiAgICAgICAgKVxyXG4gICAgICAgKTtcclxuXHJcbiAgICAgICB0eC5hZGRPdXRwdXQoc2NyaXB0VXR4bzEpO1xyXG5cclxuICAgICAgdmFyIHNjcmlwdFV0eG8yID0gbmV3IFR4T3V0cHV0KFxyXG4gICAgICAgIHNjcmlwdEFkZHJlc3MsXHJcbiAgICAgICAgbmV3IFZhbHVlKHRvdGFsQWRhSW5JbnB1dHMgLSBhZGFQZXJTY3JpcHRPdXRwdXQsIHZhbHVlQ29udHJhY3QyKSwgIC8vIFJlbWFpbmluZyB0cmVhc3VyeSB0b2tlbnNcclxuICAgICAgICBEYXR1bS5pbmxpbmUoXHJcbiAgICAgICAgICBuZXcgQ29uc3RyRGF0YSgwLCBbIG5ldyBCeXRlQXJyYXlEYXRhKGhleFRvQnl0ZXMoYmVuZWZpdGlhcnkucHViS2V5SGFzaD8uaGV4ISkpIF0pXHJcbiAgICAgICAgKVxyXG4gICAgICAgKTtcclxuICAgIFxyXG4gICAgICAgdHguYWRkT3V0cHV0KHNjcmlwdFV0eG8yKTtcclxuICAgIH0gIFxyXG5cclxuICAgICAgLy92YXIgaW5wdXRGZWVzID0gYXdhaXQgd2FsbGV0SGVscGVyLnBpY2tVdHhvcyhuZXcgVmFsdWUodG9rZW5BbW91bnRGZWVzKSk7XHJcbiAgICAgIFxyXG4gICAgICAvL3R4LmFkZElucHV0cyhpbnB1dEZlZXNbMF0pO1xyXG4gICAgICBjb25zb2xlLmxvZyhcIldlIGF0dGF0Y2hlZCBldmVyeXRoaW5nIVwiKVxyXG5cclxuICAgICAgXHJcblxyXG4gICAgICBhd2FpdCB0eC5maW5hbGl6ZShuZXR3b3JrUGFyYW1zLCBiZW5lZml0aWFyeSwgdXR4b3MpO1xyXG4gICAgICBjb25zb2xlLmxvZyhcImRhbGkgZmluYWxpemlyYWhtZT9cIilcclxuICAgICAgLy8gU2lnbiB0aGUgdW5zaWduZWQgdHggdG8gZ2V0IHRoZSB3aXRuZXNzXHJcbiAgICAgIGNvbnN0IHNpZ25hdHVyZXMgPSBhd2FpdCBjaXAzMFdhbGxldEFQSS5zaWduVHgodHgpO1xyXG4gICAgICB0eC5hZGRTaWduYXR1cmVzKHNpZ25hdHVyZXMpO1xyXG4gICAgICBjb25zb2xlLmxvZyhcIkRhbGkgcSBzaWduaXJhaG1lP1wiKVxyXG5cclxuICAgICAgY29uc3QgdHhIYXNoID0gYXdhaXQgY2lwMzBXYWxsZXRBUEkuc3VibWl0VHgodHgpO1xyXG5cclxuICAgICAgc2V0VHgoeyB0eElkOiB0eEhhc2guaGV4IH0pO1xyXG4gICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xyXG5cclxuICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihcInN1Ym1pdCB0eCBmYWlsZWRcIiwgZXJyKTtcclxuICAgICAgICB0aHJvdyBlcnI7IFxyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICBleHBvcnQgYXN5bmMgZnVuY3Rpb24gc2VuZCh3YWxsZXRBUEk6IGFueSwgc2V0SXNMb2FkaW5nOiAodmFsOiBib29sZWFuKSA9PiB2b2lkLCBzZXRUeDogKHZhbDoge3R4SWQ6IHN0cmluZ30pID0+IHZvaWQpIHtcclxuICAgIHNldElzTG9hZGluZyh0cnVlKTtcclxuXHJcbiAgICBpZiAoIXdhbGxldEFQSSkge1xyXG4gICAgICB0aHJvdyBjb25zb2xlLmVycm9yKFwid2FsbGV0QVBJIGlzIG5vdCBzZXRcIik7XHJcbiAgICB9XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBjaXAzMFdhbGxldEFQSSA9IG5ldyBDaXAzMFdhbGxldCh3YWxsZXRBUEkpO1xyXG4gICAgICAvLyBjb25zdCBibG9ja2Zyb3N0ID0gbmV3IEJsb2NrRnJvc3RJUEZTKHtcclxuICAgICAgLy8gICBuZXR3b3JrOiBuZXR3b3JrLFxyXG4gICAgICAvLyAgIHByb2plY3RJZDogXCJwcmVwcm9kSkV4TzBNQU1SZ2ZwWHo5SWw0SXFCMnU5ZGRveWxaQlRcIixcclxuICAgICAgLy8gfSk7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiZ21tbVwiKVxyXG5cclxuICAgICAgY29uc3Qgd2FsbGV0SGVscGVyID0gbmV3IFdhbGxldEhlbHBlcihjaXAzMFdhbGxldEFQSSk7XHJcblxyXG4gICAgICBjb25zdCBwb2xpY3lJZCA9IFwiMTRlN2I3MDA3NjU3YzE5MTk2M2NjMDE2NDI1ZmRjYTAyYjM5N2I1YjMxNzg0YmEyNjM3ZWNhZDNcIjtcclxuICAgICAgY29uc3QgbmFtZSA9IEJ1ZmZlci5mcm9tKFwiQkVSVFwiLCAndXRmOCcpLnRvU3RyaW5nKCdoZXgnKTtcclxuXHJcbiAgICAgIGNvbnN0IG1waCA9IE1pbnRpbmdQb2xpY3lIYXNoLmZyb21IZXgocG9saWN5SWQpO1xyXG5cclxuICAgICAgY29uc3QgYXNzZXRDbGFzcyA9IG5ldyBBc3NldENsYXNzKHtcclxuICAgICAgICBtcGg6IG1waCwgLy8gWW91ciBwb2xpY3kgaGFzaFxyXG4gICAgICAgIHRva2VuTmFtZTogbmFtZS8vIENvbnZlcnQgdG8gaGV4IHN0cmluZ1xyXG4gICAgICB9KTsgXHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKGFzc2V0Q2xhc3MpXHJcblxyXG4gICAgICBjb25zdCBtaW5BZGEgOiBudW1iZXIgPSAxXzAwMF8wMDA7IC8vIG1pbmltdW0gbG92ZWxhY2UgdG8gc2VuZFxyXG4gICAgICBjb25zdCBtaW5BZGFWYWwgPSBuZXcgVmFsdWUoQmlnSW50KG1pbkFkYSkpO1xyXG5cclxuICAgICAgY29uc3QgdGVzdFZhbHVlU2NyaXB0ID0gbmV3IEFzc2V0cyhbW2Fzc2V0Q2xhc3MsIEJpZ0ludCgxMjU1NTApXV0pO1xyXG5cclxuICAgICAgLy8gR2V0IHdhbGxldCBVVFhPc1xyXG4gICAgICBjb25zdCB1dHhvcyA9IGF3YWl0IHdhbGxldEhlbHBlci5waWNrVXR4b3MobmV3IFZhbHVlKHVuZGVmaW5lZCwgdGVzdFZhbHVlU2NyaXB0KSk7XHJcbiAgICAgIGNvbnNvbGUubG9nKHV0eG9zKTtcclxuXHJcbiAgICAgIC8vIEdldCBjaGFuZ2UgYWRkcmVzc1xyXG4gICAgICBjb25zdCBiZW5lZml0aWFyeSA9IGF3YWl0IHdhbGxldEhlbHBlci5jaGFuZ2VBZGRyZXNzO1xyXG4gICAgICAvLyBMb2FkIGluIHRoZSB2ZXN0aW5nIHZhbGlkYXRvciBzY3JpcHQgKHByb2dyYW0pXHJcblxyXG4gICAgICBjb25zdCBnYW1lUmV3YXJkID0gbmV3IEdhbWVSZXdhcmQoKTtcclxuXHJcbiAgICAgIC8vIENvbXBpbGUgdGhlIHZlc3RpbmcgdmFsaWRhdG9yXHJcbiAgICAgIGNvbnN0IGNvbXBpbGVkUHJvZ3JhbSA9IGdhbWVSZXdhcmQuY29tcGlsZShvcHRpbWl6ZSk7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiV2FsbGV0IGFkZHJlc3M6IFwiICsgYmVuZWZpdGlhcnkpXHJcbiAgICAgIGNvbnN0IHNjcmlwdEFkZHJlc3MgPSBBZGRyZXNzLmZyb21IYXNoZXMoY29tcGlsZWRQcm9ncmFtLnZhbGlkYXRvckhhc2gpXHJcbiAgICBcclxuICAgICAgICAvL3JlbW92ZVxyXG4gICAgICBjb25zb2xlLmxvZyhzY3JpcHRBZGRyZXNzLnRvQmVjaDMyKCkpO1xyXG4gICAgICBjb25zb2xlLmxvZyhcIlNjcmlwdCBBZGRyZXNzOlwiICsgc2NyaXB0QWRkcmVzcylcclxuICAgICAgXHJcbiAgICAgIC8vIENvbnN0cnVjdCB0aGUgdmVzdGluZyBkYXR1bVxyXG4gICAgICBjb25zdCBnYW1lRGF0dW0gPSBuZXcgZ2FtZVJld2FyZC50eXBlcy5EYXR1bShcclxuICAgICAgICBiZW5lZml0aWFyeS5wdWJLZXlIYXNoLFxyXG4gICAgICApXHJcbiAgICBcclxuICAgIC8vY29uc3QgcmVkZWVtYmVyID0gKG5ldyBnYW1lUmV3YXJkLnR5cGVzLlJlZGVlbWVyLkNsYWltKCkpLl90b1VwbGNEYXRhKCk7XHJcbiAgICBcclxuICAgICAgY29uc3QgdHggPSBuZXcgVHgoKTtcclxuICAgICAgdHguYWRkSW5wdXRzKHV0eG9zWzBdKTtcclxuICAgICAgdHguYWRkT3V0cHV0KG5ldyBUeE91dHB1dChcclxuICAgICAgICBzY3JpcHRBZGRyZXNzLFxyXG4gICAgICAgIG5ldyBWYWx1ZSh1bmRlZmluZWQsIHRlc3RWYWx1ZVNjcmlwdCksXHJcbiAgICAgICAgRGF0dW0uaW5saW5lKGdhbWVEYXR1bSlcclxuICAgICAgKSk7XHJcblxyXG4gICAgICAvLyB0eC5hZGRPdXRwdXQobmV3IFR4T3V0cHV0KFxyXG4gICAgICAvLyAgIGJlbmVmaXRpYXJ5LFxyXG4gICAgICAvLyAgIG1pbkFkYVZhbCxcclxuICAgICAgLy8gKSk7XHJcbiAgICBcclxuICAgICAgY29uc29sZS5sb2coXCJXZSBhdHRhdGNoZWQgZXZlcnl0aGluZyFcIilcclxuXHJcbiAgICAgIC8vIFJlYWQgaW4gdGhlIG5ldHdvcmsgcGFyYW1ldGVyIGZpbGVcclxuICAgICAgY29uc3QgbmV0d29ya1BhcmFtc0pzb24gPSBhd2FpdCBnZXROZXR3b3JrUGFyYW1zKG5ldHdvcmspO1xyXG4gICAgICBjb25zdCBuZXR3b3JrUGFyYW1zID0gbmV3IE5ldHdvcmtQYXJhbXMobmV0d29ya1BhcmFtc0pzb24pO1xyXG5cclxuICAgICAgLy8gU2VuZCBhbnkgY2hhbmdlIGJhY2sgdG8gdGhlIGJ1eWVyXHJcbiAgICAgIGF3YWl0IHR4LmZpbmFsaXplKG5ldHdvcmtQYXJhbXMsIGJlbmVmaXRpYXJ5LCB1dHhvc1sxXSk7XHJcblxyXG4gICAgICAvLyBTaWduIHRoZSB1bnNpZ25lZCB0eCB0byBnZXQgdGhlIHdpdG5lc3NcclxuICAgICAgY29uc3Qgc2lnbmF0dXJlcyA9IGF3YWl0IGNpcDMwV2FsbGV0QVBJLnNpZ25UeCh0eCk7XHJcbiAgICAgIHR4LmFkZFNpZ25hdHVyZXMoc2lnbmF0dXJlcyk7XHJcblxyXG4gICAgICBjb25zb2xlLmxvZyhcInNpZ25lZFwiKTtcclxuICAgICAgLy8gU3VibWl0IHRoZSBzaWduZWQgdHhcclxuICAgICAgY29uc3QgdHhIYXNoID0gYXdhaXQgY2lwMzBXYWxsZXRBUEkuc3VibWl0VHgodHgpO1xyXG5cclxuICAgICAgc2V0VHgoeyB0eElkOiB0eEhhc2guaGV4IH0pO1xyXG4gICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xyXG5cclxuICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XHJcbiAgICAgICAgdGhyb3cgY29uc29sZS5lcnJvcihcInN1Ym1pdCB0eCBmYWlsZWRcIiwgZXJyKTtcclxuICAgIH1cclxuICB9XHJcbiAgICBcclxuICBhc3luYyBmdW5jdGlvbiBmZXRjaFV0eG9zKHNjcmlwdEFkZHJlc3M6IHN0cmluZyk6IFByb21pc2U8eyBzZWxlY3RlZDogVHhJbnB1dFtdOyB0b3RhbEFtb3VudDogYmlnaW50LCBkeW5hbWljUmV3YXJkOiBiaWdpbnQgfT4ge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9nZXRVdHhvc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHNjcmlwdEFkZHJlc3N9KSxcclxuICAgIH0pO1xyXG4gIFxyXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTsgLy8gUmF3IEpTT04gYXJyYXkgZnJvbSBiYWNrZW5kXHJcbiAgXHJcbiAgICAvLyBgQ29udmVydCBKU09OIGJhY2sgdG8gVHhJbnB1dCBvYmplY3RzXHJcbiAgICBjb25zdCBzZWxlY3RlZFV0eG9zID0gZGF0YS5zZWxlY3RlZC5tYXAoKHV0eG86IGFueSkgPT4gVHhJbnB1dC5mcm9tRnVsbENib3IodXR4bykpO1xyXG4gICAgY29uc3QgZHluYW1pY1Jld2FyZDogYmlnaW50ID0gQmlnSW50KGRhdGEuZHluYW1pY1Jld2FyZCk7XHJcbiAgICBjb25zdCB0b3RhbEFtb3VudDogYmlnaW50ID0gQmlnSW50KGRhdGEudG90YWxBbW91bnQpO1xyXG4gICAgY29uc29sZS5sb2coXCJzZWxlY3RlZFV0eG9zXCIrIHNlbGVjdGVkVXR4b3MpO1xyXG4gICAgY29uc29sZS5sb2coXCJkeW5hbWljUmV3YXJkXCIgKyBkeW5hbWljUmV3YXJkKTtcclxuICAgIGNvbnNvbGUubG9nKFwidG90YWxBbW91bnRcIisgdG90YWxBbW91bnQpO1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIHNlbGVjdGVkOiBzZWxlY3RlZFV0eG9zLFxyXG4gICAgICB0b3RhbEFtb3VudDogdG90YWxBbW91bnQsXHJcbiAgICAgIGR5bmFtaWNSZXdhcmQ6IGR5bmFtaWNSZXdhcmQsXHJcbiAgICB9O1xyXG4gIH1cclxuICBcclxuXHJcbiAgZnVuY3Rpb24gY3JlYXRlQ2xhaW1SZWRlZW1lcihwdWJLZXlIYXNoSGV4OiBzdHJpbmcpOiBSZWRlZW1lciB7XHJcbiAgICAvLyBUaGUgXCJDbGFpbVwiIGNvbnN0cnVjdG9yIG1pZ2h0IGJlIHRhZz0xIGlmIGl0J3MgdGhlIHNlY29uZCBpbiB0aGUgZW51bVxyXG4gICAgY29uc3QgdGFnID0gMTtcclxuICAgIGNvbnN0IGZpZWxkID0gW25ldyBCeXRlQXJyYXlEYXRhKGhleFRvQnl0ZXMocHViS2V5SGFzaEhleCkpXTtcclxuICAgIGNvbnN0IGNvbnN0ciA9IG5ldyBDb25zdHJEYXRhKHRhZywgZmllbGQpO1xyXG4gICAgcmV0dXJuIG5ldyBSZWRlZW1lcihjb25zdHIpO1xyXG4gIH1cclxuICBcclxuICBmdW5jdGlvbiBjcmVhdGVHYW1lRGF0dW0oYmVuZWZpdGlhcnlIYXNoSGV4OiBzdHJpbmcpOiBEYXR1bSB7XHJcbiAgICAvLyBJZiB0aGlzIHN0cnVjdCBoYXMgb25seSBvbmUgZmllbGQsIHR5cGljYWxseSBpdCdzIHRhZz0wXHJcbiAgICBjb25zdCB0YWcgPSAwO1xyXG4gICAgY29uc3QgZmllbGQgPSBbbmV3IEJ5dGVBcnJheURhdGEoaGV4VG9CeXRlcyhiZW5lZml0aWFyeUhhc2hIZXgpKV07XHJcbiAgICBjb25zdCBjZCA9IG5ldyBDb25zdHJEYXRhKHRhZywgZmllbGQpO1xyXG4gICAgcmV0dXJuIERhdHVtLmlubGluZShjZCk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBwYXJzZVBsdXR1c0Nib3IoY2JvckhleDogc3RyaW5nKTogVXBsY1Byb2dyYW0ge1xyXG4gICAgLy8gSWYgeW91ciBIZWxpb3MgdmVyc2lvbiBzdXBwb3J0cyBVcGxjUHJvZ3JhbS51bnBhY2soKTpcclxuICAgIHJldHVybiBVcGxjUHJvZ3JhbS5mcm9tQ2JvcihjYm9ySGV4KTtcclxuICB9Il0sIm5hbWVzIjpbIk5ldHdvcmtQYXJhbXMiLCJWYWx1ZSIsIlR4T3V0cHV0IiwiVHgiLCJUeElucHV0IiwiQ2lwMzBXYWxsZXQiLCJEYXR1bSIsIkFzc2V0cyIsIldhbGxldEhlbHBlciIsIk1pbnRpbmdQb2xpY3lIYXNoIiwiVXBsY1Byb2dyYW0iLCJSZWRlZW1lciIsIkFzc2V0Q2xhc3MiLCJBZGRyZXNzIiwiQ29uc3RyRGF0YSIsIkJ5dGVBcnJheURhdGEiLCJoZXhUb0J5dGVzIiwibmV0d29yayIsImdldE5ldHdvcmtQYXJhbXMiLCJHYW1lUmV3YXJkIiwib3B0aW1pemUiLCJjYWxjdWxhdGVDb3VudGRvd24iLCJUaW1lQmVnaW5Db250cmFjdCIsIlRpbWVOb3ciLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93IiwiQ1lDTEVfRFVSQVRJT04iLCJvZmZzZXRJbk1zIiwiZWxhcHNlZFRpbWUiLCJlbGFwc2VkVGltZUluU2Vjb25kcyIsInBvc2l0aW9uSW5DeWNsZSIsIkdBTUVfUkVXQVJEX0NCT1JfSlNPTiIsImNsYWltVG9rZW5zIiwid2FsbGV0QVBJIiwic2V0SXNMb2FkaW5nIiwic2V0VHgiLCJFcnJvciIsImJlbmVmaXRpYXJ5IiwiY2lwMzBXYWxsZXRBUEkiLCJ3YWxsZXRIZWxwZXIiLCJuZXR3b3JrUGFyYW1zSnNvbiIsIm5ldHdvcmtQYXJhbXMiLCJwb2xpY3lJZCIsIm5hbWUiLCJCdWZmZXIiLCJmcm9tIiwidG9TdHJpbmciLCJtcGgiLCJmcm9tSGV4IiwiYXNzZXRDbGFzcyIsInRva2VuTmFtZSIsImNvbnNvbGUiLCJsb2ciLCJ1dHhvcyIsImdldFV0eG9zIiwiY2hhbmdlQWRkcmVzcyIsImNib3JIZXgiLCJ1cGxjUHJvZ3JhbSIsImNib3JCeXRlcyIsInJlYWRQcm9ncmFtIiwicHViS2V5SGFzaCIsImhleCIsInNjcmlwdEFkZHJlc3MiLCJmcm9tQmVjaDMyIiwidG9CZWNoMzIiLCJkaXIiLCJkZXB0aCIsImRhdHVtT2JqZWN0IiwiZ2FtZURhdHVtIiwiY3JlYXRlR2FtZURhdHVtIiwiSlNPTiIsInN0cmluZ2lmeSIsImNsYWltUmVkZWVtZXIiLCJjcmVhdGVDbGFpbVJlZGVlbWVyIiwiZGF0YSIsInR4Iiwic29ydGVkVXR4b3MiLCJmZXRjaFV0eG9zIiwiQ0xBSU1fV0lORE9XIiwid2luZG93Iiwib25lcnJvciIsInRlc3RWYWx1ZUJlbmVmaXRpYXJ5IiwiQmlnSW50IiwiZHluYW1pY1Jld2FyZCIsImFtb3VudFRvU2VuZEJhY2siLCJ0b3RhbEFtb3VudCIsImZpcnN0UGFydFRvU2VuZEJhY2siLCJzZWNvbmRQYXJ0VG9TZW5kQmFjayIsInZhbHVlQ29udHJhY3QxIiwidmFsdWVDb250cmFjdDIiLCJhZGRJbnB1dHMiLCJzZWxlY3RlZCIsImF0dGFjaFNjcmlwdCIsInVzZXJDbGFpbU91dHB1dCIsInVuZGVmaW5lZCIsImlubGluZSIsImFkZE91dHB1dCIsInRvdGFsQWRhSW5JbnB1dHMiLCJmb3JFYWNoIiwidXR4byIsIm91dHB1dCIsInZhbHVlIiwibG92ZWxhY2UiLCJhZGFQZXJTY3JpcHRPdXRwdXQiLCJzY3JpcHRVdHhvMSIsInNjcmlwdFV0eG8yIiwiZmluYWxpemUiLCJzaWduYXR1cmVzIiwic2lnblR4IiwiYWRkU2lnbmF0dXJlcyIsInR4SGFzaCIsInN1Ym1pdFR4IiwidHhJZCIsImVyciIsImVycm9yIiwic2VuZCIsIm1pbkFkYSIsIm1pbkFkYVZhbCIsInRlc3RWYWx1ZVNjcmlwdCIsInBpY2tVdHhvcyIsImdhbWVSZXdhcmQiLCJjb21waWxlZFByb2dyYW0iLCJjb21waWxlIiwiZnJvbUhhc2hlcyIsInZhbGlkYXRvckhhc2giLCJ0eXBlcyIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsImpzb24iLCJzZWxlY3RlZFV0eG9zIiwibWFwIiwiZnJvbUZ1bGxDYm9yIiwicHViS2V5SGFzaEhleCIsInRhZyIsImZpZWxkIiwiY29uc3RyIiwiYmVuZWZpdGlhcnlIYXNoSGV4IiwiY2QiLCJwYXJzZVBsdXR1c0Nib3IiLCJmcm9tQ2JvciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/walletActions.ts\n"));

/***/ })

});