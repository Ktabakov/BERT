"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./public/walletActions.ts":
/*!*********************************!*\
  !*** ./public/walletActions.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateCountdown: () => (/* binding */ calculateCountdown),\n/* harmony export */   claimTokens: () => (/* binding */ claimTokens),\n/* harmony export */   send: () => (/* binding */ send)\n/* harmony export */ });\n/* harmony import */ var _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @hyperionbt/helios */ \"./node_modules/@hyperionbt/helios/helios.js\");\n/* harmony import */ var _common_network__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/network */ \"./common/network.ts\");\n/* harmony import */ var _contracts_GameReward_hl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contracts/GameReward.hl */ \"./contracts/GameReward.hl\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n // Ensure correct path to your contract\nconst optimize = false;\nfunction calculateCountdown() {\n    const TimeBeginContract = 1736073600000;\n    const TimeNow = Math.floor(Date.now());\n    const CYCLE_DURATION = 600 // 10 minutes \n    ;\n    const offsetInMs = 89680;\n    const elapsedTime = TimeNow - offsetInMs - TimeBeginContract;\n    const elapsedTimeInSeconds = elapsedTime / 1000;\n    const positionInCycle = elapsedTimeInSeconds % CYCLE_DURATION;\n    return positionInCycle;\n}\nasync function claimTokens(walletAPI, setIsLoading, setTx) {\n    setIsLoading(true);\n    if (!walletAPI) {\n        throw new Error(\"Wallet API is not set.\");\n    }\n    try {\n        const cip30WalletAPI = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Cip30Wallet(walletAPI);\n        const walletHelper = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.WalletHelper(cip30WalletAPI);\n        // Read in the network parameter file\n        const networkParamsJson = await (0,_common_network__WEBPACK_IMPORTED_MODULE_0__.getNetworkParams)(_common_network__WEBPACK_IMPORTED_MODULE_0__.network);\n        const networkParams = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.NetworkParams(networkParamsJson);\n        const policyId = \"a3879594925e2ab170ed0c34204d84765411ad23e43e98771dd5a6d2\";\n        const name = Buffer.from(\"BERT\", 'utf8').toString('hex');\n        const mph = _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.MintingPolicyHash.fromHex(policyId);\n        const assetClass = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.AssetClass({\n            mph: mph,\n            tokenName: name\n        });\n        console.log(assetClass);\n        const utxos = await walletHelper.getUtxos();\n        console.log(\"utxos\" + utxos);\n        // Get change address\n        const benefitiary = await walletHelper.changeAddress;\n        // Load in the vesting validator script (program)\n        const program = _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Program.new(\"59096659096301000032323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232222533357346660086026006602200460f00022930983ba4811976616c69646174696f6e2072657475726e65642066616c7365002223232323232323232323232323325333573466e1c0052000123307500e301f0111232335736660ea660e8660e6016002014921254e6f7420656e6f75676820746f6b656e732073656e74206261636b20746f2073637269707400335736660ea660e8660e0660a001e603c00401c002920116496e636f727265637420746f6b656e207061796f757400335736660ea6609c00a9452401134e6f7420696e20636c61696d2077696e646f770053335734660e80149000099ab9b3307533074301500c480012412e4e6f20736372697074206f7574707574732073686f756c642072656d61696e2061742066696e616c20636c61696d004a22a266ae6ccc1d4cc1d0c05403120044911049206e6565642032206f75747075747300335736660ea6609a01001292011d4e6f204144412063616e206c656176652074686520636f6e7472616374004a2a666ae68cc12c0140284028544014d55ce9baa00100100d301100230130013042304000833300c3056007225333573464664a666ae68cdc3800a40042466086608200201424940d55ce9baa0010013056305500113303d00253037305e00115100248000ccc028c0cc018894ccd5cd191992999ab9a3370e0029001091982118200008048925035573a6ea8004004c154c150c0d00044cc0f00094c0d8c174c0d0004544009200033300a002223303b00233068305c00100648000ccc020c0c401088cc0e8008cc19cc16cc0c800401520003302b003001530250033303100f53023491044245525400302500122233305f0032233004002302200100122233305e0032233004002302000100101923232323232335736603aa60360040026603200200e6602e00200a660280026026906807998088010009807a4101e1cdc10cca905804a405046464646466ae6cc0654c03c014c8cd5cd980d2980c000a999ab9a3306100148000401c54ccd5cd19830800a400426602a00e90020a999ab9a33061001480104cc05401d200815133015007480214ccd5cd1981c00080388038a880099809800803998088009808241a01e6601c004002601890407873704332a41413802900224101396a0e600a91011ca3879594925e2ab170ed0c34204d84765411ad23e43e98771dd5a6d20023039305500106806703506500806304e061001706e19c4909b99325333573466e200092000133716902d19980080099b820024800522100133300100100248900222325333573466e2000d20141001133300400433706006900a00099b8b300500200123370066e180052014481808cd5ce000a4c4646600200200444a666aae7c00452000133700660040046ae8800520020580572137300024260266010605660546014a6004002426464660020026018600800644a666aae7c0044c1592401096e6f7420666f756e64001325333573466ebcc01c00401040044cc00c00cd5d10011aba10015300400103e03d21303d303c0012233028002233004001002223253335734600a002266022004601e60080022940c098c0940088cc070005200223370e6aae74dd5000a400406c46eb0c0dc00484cc0d0004008cc005220100488100223374a900019802180180118238008221119aba000230030012335740002058e008c008c0bc00404804c0048d5d0981980091801181518151815000800bad2230053371200400244600866e2000800488ccd5cd00100098018009199ab9a0014a094488c050cc00c00800488cc0380088cc01000400888c94ccd5cd1805800899804801180318020008a50300c300b00223300200148000894ccd5cd19b8735573a6ea800800440084c0cd2411c756e657870656374656420636f6e7374727563746f7220696e6465780023002301e00100175c002e3c8cdc39aab9d3754002900000b80b1119802980180100091bac300200123574260420024466600600400201e44464666002002008006444a666aae7c00840104c94ccd5cd1801000899aba00013330040043574400600426660080086ae8800c008d5d08011199807000911980300118028008011bb24988dd5980700091199801801000b8022232333001001330070040033764931112999aab9f0021001132323253335573e0022004266ae80cdd80019ba600100233300a0063300900800233009007002333004004357440060046ae8400888c8cc00400400c894ccd55cf80089bb249854ccd5cd19baf35573a6ae8400400c4dd59aab9e357420022660040046ae88004888c8ccc004004cc01400c008dd924c444a666aae7c00840044c8c8c94ccd5cd19b870014800040084cd5d019bb00033750002004660106601c00e0046601c00c0046660080086ae8800c008d5d080111191919198030018009998008008010019112999aab9f001100a132533357346601200a00226660080080066ae880084cd5d00009998020020019aba200235573a6ae84004c01400888c8ccc00400400800c8894ccd55cf8008801099aba0357420026660060060046ae8800488cc0640088cdd780080111919800800801112999aab9f001100413357406aae74d5d0800998010011aba200137629311191998008008018011112999aab9f00214800054ccd5cd19baf35573a6ae840080044dd69aab9e3574200426660060066ae88008004888c8ccc0040040100088894ccd55cf801080089998018019aba20023300500135742004446464646466600400400200c44a666aae7c0045200015333573466ebcd55ce9aba10010041375a6aae78d5d08008998010011aba200122253335573e002290000a999ab9a3375e6aae74d5d08008028998010011bab35573c6ae840044ccc00c00c008d5d10009802001180200091aba130100012357426020002e05c3912999ab9a002149854cd5ce0008b1119198079802001919baf001002300f00123758600400246ae84c0080048d5d1180100091aba23002001235744600400246ae88c0080048d5d1180100091aba23002001235744600400246ae88c0080048d55cf1baa001223233300100100300222253335573e004294054ccd5cd18009aba100214a226660060066ae88008004005d49299ab9c0011600120011\");\n        const gameReward = new _contracts_GameReward_hl__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n        // Compile the vesting validator\n        const compiledProgram = gameReward.compile(optimize);\n        console.log(\"Wallet address: \" + benefitiary);\n        const scriptAddress = _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Address.fromHashes(compiledProgram.validatorHash);\n        console.log(scriptAddress.toBech32());\n        console.log(\"Script Address:\" + scriptAddress);\n        console.dir(scriptAddress, {\n            depth: null\n        });\n        const sortedUtxos = await fetchUtxos(scriptAddress.toBech32());\n        const CLAIM_WINDOW = 20; // 20 seconds \n        const positionInCycle = calculateCountdown();\n        console.log(\"positionInCycle\" + positionInCycle);\n        window.onerror = ()=>positionInCycle < CLAIM_WINDOW;\n        //const dynamicReward = calculateReward(Number(remainingSupply), TOTAL_SUPPLY, BASE_REWARD);\n        const testValueBenefitiary = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Assets([\n            [\n                assetClass,\n                BigInt(sortedUtxos.dynamicReward)\n            ]\n        ]);\n        //const totalAmountUtxo = getTokenAmountFromUtxos(sortedUtxos.selected, assetClass);\n        const amountToSendBack = BigInt(sortedUtxos.totalAmount) - BigInt(sortedUtxos.dynamicReward);\n        const firstPartToSendBack = amountToSendBack / 2n; // First part is half of the total amount\n        const secondPartToSendBack = amountToSendBack - firstPartToSendBack; // Second part is the remainder\n        console.log(\"First \" + firstPartToSendBack);\n        console.log(\"Sevond \" + secondPartToSendBack);\n        console.log(sortedUtxos.dynamicReward);\n        const valueContract1 = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Assets([\n            [\n                assetClass,\n                firstPartToSendBack\n            ]\n        ]);\n        const valueContract2 = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Assets([\n            [\n                assetClass,\n                secondPartToSendBack\n            ]\n        ]);\n        const gameDatum = new gameReward.types.Datum(benefitiary.pubKeyHash);\n        // Create the vesting claim redeemer\n        const redeember = new gameReward.types.Redeemer.Claim(benefitiary.pubKeyHash)._toUplcData();\n        //console.log(filteredUtxos);\n        const tx = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Tx();\n        //tx.addInputs(utxos[0]);\n        tx.addInputs(sortedUtxos.selected, redeember);\n        tx.attachScript(compiledProgram);\n        var userClaimOutput = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.TxOutput(benefitiary, new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Value(undefined, testValueBenefitiary));\n        tx.addOutput(userClaimOutput);\n        //Shiiit, fix. Someone could rediredt the rest of the tokens\n        // const addressStr = \"addr_test1qrarqhmklnhwcw3q0zm6sgm3g3l7pua0y36sql9k5ru8dsucglsked5f5yrcf9e9xgxjgmt7xk52knh8h0dgayc00arqlh7g60\";\n        // const address = Address.fromBech32(addressStr);\n        // tx.addOutput(new TxOutput(\n        //   address,\n        //   new Value(undefined, testValueContract) // The amount being claimed\n        // ));\n        // Calculate total ADA in the selected script inputs\n        let totalAdaInInputs = BigInt(0);\n        sortedUtxos.selected.forEach((utxo)=>{\n            totalAdaInInputs += BigInt(utxo.output.value.lovelace);\n        });\n        // Distribute ADA equally (or as required) among script outputs\n        const adaPerScriptOutput = totalAdaInInputs / 2n; // Assuming two script outputs\n        if (amountToSendBack != BigInt(0)) {\n            var scriptUtxo1 = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.TxOutput(scriptAddress, new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Value(adaPerScriptOutput, valueContract1), _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Datum.inline(gameDatum) // Contract requires datum\n            );\n            tx.addOutput(scriptUtxo1);\n            var scriptUtxo2 = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.TxOutput(scriptAddress, new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Value(totalAdaInInputs - adaPerScriptOutput, valueContract2), _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Datum.inline(gameDatum) // Contract requires datum\n            );\n            tx.addOutput(scriptUtxo2);\n        }\n        //var inputFees = await walletHelper.pickUtxos(new Value(tokenAmountFees));\n        //tx.addInputs(inputFees[0]);\n        console.log(\"We attatched everything!\");\n        await tx.finalize(networkParams, benefitiary, utxos);\n        console.log(\"dali finalizirahme?\");\n        // Sign the unsigned tx to get the witness\n        const signatures = await cip30WalletAPI.signTx(tx);\n        tx.addSignatures(signatures);\n        console.log(\"Dali q signirahme?\");\n        const txHash = await cip30WalletAPI.submitTx(tx);\n        setTx({\n            txId: txHash.hex\n        });\n        setIsLoading(false);\n    } catch (err) {\n        setIsLoading(false);\n        console.error(\"submit tx failed\", err);\n        throw err;\n    }\n}\nasync function send(walletAPI, setIsLoading, setTx) {\n    setIsLoading(true);\n    if (!walletAPI) {\n        throw console.error(\"walletAPI is not set\");\n    }\n    try {\n        const cip30WalletAPI = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Cip30Wallet(walletAPI);\n        // const blockfrost = new BlockFrostIPFS({\n        //   network: network,\n        //   projectId: \"preprodJExO0MAMRgfpXz9Il4IqB2u9ddoylZBT\",\n        // });\n        console.log(\"gmmm\");\n        const walletHelper = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.WalletHelper(cip30WalletAPI);\n        const policyId = \"a3879594925e2ab170ed0c34204d84765411ad23e43e98771dd5a6d2\";\n        const name = Buffer.from(\"BERT\", 'utf8').toString('hex');\n        const mph = _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.MintingPolicyHash.fromHex(policyId);\n        const assetClass = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.AssetClass({\n            mph: mph,\n            tokenName: name // Convert to hex string\n        });\n        console.log(assetClass);\n        const minAda = 1000000; // minimum lovelace to send\n        const minAdaVal = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Value(BigInt(minAda));\n        const testValueScript = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Assets([\n            [\n                assetClass,\n                BigInt(125550)\n            ]\n        ]);\n        // Get wallet UTXOs\n        const utxos = await walletHelper.pickUtxos(new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Value(undefined, testValueScript));\n        console.log(utxos);\n        // Get change address\n        const benefitiary = await walletHelper.changeAddress;\n        // Load in the vesting validator script (program)\n        const gameReward = new _contracts_GameReward_hl__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n        // Compile the vesting validator\n        const compiledProgram = gameReward.compile(optimize);\n        console.log(\"Wallet address: \" + benefitiary);\n        const scriptAddress = _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Address.fromHashes(compiledProgram.validatorHash);\n        //remove\n        console.log(scriptAddress.toBech32());\n        console.log(\"Script Address:\" + scriptAddress);\n        // Construct the vesting datum\n        const gameDatum = new gameReward.types.Datum(benefitiary.pubKeyHash);\n        //const redeember = (new gameReward.types.Redeemer.Claim())._toUplcData();\n        const tx = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Tx();\n        tx.addInputs(utxos[0]);\n        tx.addOutput(new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.TxOutput(scriptAddress, new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Value(undefined, testValueScript), _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.Datum.inline(gameDatum)));\n        // tx.addOutput(new TxOutput(\n        //   benefitiary,\n        //   minAdaVal,\n        // ));\n        console.log(\"We attatched everything!\");\n        // Read in the network parameter file\n        const networkParamsJson = await (0,_common_network__WEBPACK_IMPORTED_MODULE_0__.getNetworkParams)(_common_network__WEBPACK_IMPORTED_MODULE_0__.network);\n        const networkParams = new _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.NetworkParams(networkParamsJson);\n        // Send any change back to the buyer\n        await tx.finalize(networkParams, benefitiary, utxos[1]);\n        // Sign the unsigned tx to get the witness\n        const signatures = await cip30WalletAPI.signTx(tx);\n        tx.addSignatures(signatures);\n        console.log(\"signed\");\n        // Submit the signed tx\n        const txHash = await cip30WalletAPI.submitTx(tx);\n        setTx({\n            txId: txHash.hex\n        });\n        setIsLoading(false);\n    } catch (err) {\n        setIsLoading(false);\n        throw console.error(\"submit tx failed\", err);\n    }\n}\nasync function fetchUtxos(scriptAddress) {\n    const response = await fetch(\"/api/getUtxos\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            scriptAddress\n        })\n    });\n    const data = await response.json(); // Raw JSON array from backend\n    // `Convert JSON back to TxInput objects\n    const selectedUtxos = data.selected.map((utxo)=>_hyperionbt_helios__WEBPACK_IMPORTED_MODULE_2__.TxInput.fromFullCbor(utxo));\n    const dynamicReward = BigInt(data.dynamicReward);\n    const totalAmount = BigInt(data.totalAmount);\n    console.log(\"selectedUtxos\" + selectedUtxos);\n    console.log(\"dynamicReward\" + dynamicReward);\n    console.log(\"totalAmount\" + totalAmount);\n    return {\n        selected: selectedUtxos,\n        totalAmount: totalAmount,\n        dynamicReward: dynamicReward\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/walletActions.ts\n"));

/***/ })

});