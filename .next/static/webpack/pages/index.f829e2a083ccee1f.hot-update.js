"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./common/network.ts":
/*!***************************!*\
  !*** ./common/network.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNetworkParams: function() { return /* binding */ getNetworkParams; },\n/* harmony export */   network: function() { return /* binding */ network; }\n/* harmony export */ });\n/* harmony import */ var _hyperionbt_helios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hyperionbt/helios */ \"./node_modules/@hyperionbt/helios/helios.js\");\n\n\n// Define Cardano network\nconst network = \"preprod\";\n_hyperionbt_helios__WEBPACK_IMPORTED_MODULE_0__.config.set({\n    ..._hyperionbt_helios__WEBPACK_IMPORTED_MODULE_0__.config,\n    IS_TESTNET: true\n});\nasync function getNetworkParams(network) {\n    return {\n        \"shelleyGenesis\": {\n            \"activeSlotsCoeff\": 0.05,\n            \"epochLength\": 432000,\n            \"genDelegs\": {\n                \"637f2e950b0fd8f8e3e811c5fbeb19e411e7a2bf37272b84b29c1a0b\": {\n                    \"delegate\": \"aae9293510344ddd636364c2673e34e03e79e3eefa8dbaa70e326f7d\",\n                    \"vrf\": \"227116365af2ed943f1a8b5e6557bfaa34996f1578eec667a5e2b361c51e4ce7\"\n                },\n                \"8a4b77c4f534f8b8cc6f269e5ebb7ba77fa63a476e50e05e66d7051c\": {\n                    \"delegate\": \"d15422b2e8b60e500a82a8f4ceaa98b04e55a0171d1125f6c58f8758\",\n                    \"vrf\": \"0ada6c25d62db5e1e35d3df727635afa943b9e8a123ab83785e2281605b09ce2\"\n                },\n                \"b00470cd193d67aac47c373602fccd4195aad3002c169b5570de1126\": {\n                    \"delegate\": \"b3b539e9e7ed1b32fbf778bf2ebf0a6b9f980eac90ac86623d11881a\",\n                    \"vrf\": \"0ff0ce9b820376e51c03b27877cd08f8ba40318f1a9f85a3db0b60dd03f71a7a\"\n                },\n                \"b260ffdb6eba541fcf18601923457307647dce807851b9d19da133ab\": {\n                    \"delegate\": \"7c64eb868b4ef566391a321c85323f41d2b95480d7ce56ad2abcb022\",\n                    \"vrf\": \"7fb22abd39d550c9a022ec8104648a26240a9ff9c88b8b89a6e20d393c03098e\"\n                },\n                \"ced1599fd821a39593e00592e5292bdc1437ae0f7af388ef5257344a\": {\n                    \"delegate\": \"de7ca985023cf892f4de7f5f1d0a7181668884752d9ebb9e96c95059\",\n                    \"vrf\": \"c301b7fc4d1b57fb60841bcec5e3d2db89602e5285801e522fce3790987b1124\"\n                },\n                \"dd2a7d71a05bed11db61555ba4c658cb1ce06c8024193d064f2a66ae\": {\n                    \"delegate\": \"1e113c218899ee7807f4028071d0e108fc790dade9fd1a0d0b0701ee\",\n                    \"vrf\": \"faf2702aa4893c877c622ab22dfeaf1d0c8aab98b837fe2bf667314f0d043822\"\n                },\n                \"f3b9e74f7d0f24d2314ea5dfbca94b65b2059d1ff94d97436b82d5b4\": {\n                    \"delegate\": \"fd637b08cc379ef7b99c83b416458fcda8a01a606041779331008fb9\",\n                    \"vrf\": \"37f2ea7c843a688159ddc2c38a2f997ab465150164a9136dca69564714b73268\"\n                }\n            },\n            \"initialFunds\": {},\n            \"maxKESEvolutions\": 120,\n            \"maxLovelaceSupply\": 45000000000000000,\n            \"networkId\": \"Testnet\",\n            \"networkMagic\": 1,\n            \"protocolParams\": {\n                \"a0\": 0.1,\n                \"decentralisationParam\": 1,\n                \"eMax\": 18,\n                \"extraEntropy\": {\n                    \"tag\": \"NeutralNonce\"\n                },\n                \"keyDeposit\": 400000,\n                \"maxBlockBodySize\": 65536,\n                \"maxBlockHeaderSize\": 1100,\n                \"maxTxSize\": 16384,\n                \"minFeeA\": 44,\n                \"minFeeB\": 155381,\n                \"minPoolCost\": 0,\n                \"minUTxOValue\": 0,\n                \"nOpt\": 50,\n                \"poolDeposit\": 500000000,\n                \"protocolVersion\": {\n                    \"major\": 2,\n                    \"minor\": 0\n                },\n                \"rho\": 0.00178650067,\n                \"tau\": 0.1\n            },\n            \"securityParam\": 2160,\n            \"slotLength\": 1,\n            \"slotsPerKESPeriod\": 86400,\n            \"staking\": {\n                \"pools\": {},\n                \"stake\": {}\n            },\n            \"systemStart\": \"2022-06-01T00:00:00Z\",\n            \"updateQuorum\": 5\n        },\n        \"alonzoGenesis\": {\n            \"lovelacePerUTxOWord\": 34482,\n            \"executionPrices\": {\n                \"prSteps\": {\n                    \"numerator\": 721,\n                    \"denominator\": 10000000\n                },\n                \"prMem\": {\n                    \"numerator\": 577,\n                    \"denominator\": 10000\n                }\n            },\n            \"maxTxExUnits\": {\n                \"exUnitsMem\": 10000000,\n                \"exUnitsSteps\": 10000000000\n            },\n            \"maxBlockExUnits\": {\n                \"exUnitsMem\": 50000000,\n                \"exUnitsSteps\": 40000000000\n            },\n            \"maxValueSize\": 5000,\n            \"collateralPercentage\": 150,\n            \"maxCollateralInputs\": 3,\n            \"costModels\": {\n                \"PlutusV1\": {\n                    \"sha2_256-memory-arguments\": 4,\n                    \"equalsString-cpu-arguments-constant\": 1000,\n                    \"cekDelayCost-exBudgetMemory\": 100,\n                    \"lessThanEqualsByteString-cpu-arguments-intercept\": 103599,\n                    \"divideInteger-memory-arguments-minimum\": 1,\n                    \"appendByteString-cpu-arguments-slope\": 621,\n                    \"blake2b-cpu-arguments-slope\": 29175,\n                    \"iData-cpu-arguments\": 150000,\n                    \"encodeUtf8-cpu-arguments-slope\": 1000,\n                    \"unBData-cpu-arguments\": 150000,\n                    \"multiplyInteger-cpu-arguments-intercept\": 61516,\n                    \"cekConstCost-exBudgetMemory\": 100,\n                    \"nullList-cpu-arguments\": 150000,\n                    \"equalsString-cpu-arguments-intercept\": 150000,\n                    \"trace-cpu-arguments\": 150000,\n                    \"mkNilData-memory-arguments\": 32,\n                    \"lengthOfByteString-cpu-arguments\": 150000,\n                    \"cekBuiltinCost-exBudgetCPU\": 29773,\n                    \"bData-cpu-arguments\": 150000,\n                    \"subtractInteger-cpu-arguments-slope\": 0,\n                    \"unIData-cpu-arguments\": 150000,\n                    \"consByteString-memory-arguments-intercept\": 0,\n                    \"divideInteger-memory-arguments-slope\": 1,\n                    \"divideInteger-cpu-arguments-model-arguments-slope\": 118,\n                    \"listData-cpu-arguments\": 150000,\n                    \"headList-cpu-arguments\": 150000,\n                    \"chooseData-memory-arguments\": 32,\n                    \"equalsInteger-cpu-arguments-intercept\": 136542,\n                    \"sha3_256-cpu-arguments-slope\": 82363,\n                    \"sliceByteString-cpu-arguments-slope\": 5000,\n                    \"unMapData-cpu-arguments\": 150000,\n                    \"lessThanInteger-cpu-arguments-intercept\": 179690,\n                    \"mkCons-cpu-arguments\": 150000,\n                    \"appendString-memory-arguments-intercept\": 0,\n                    \"modInteger-cpu-arguments-model-arguments-slope\": 118,\n                    \"ifThenElse-cpu-arguments\": 1,\n                    \"mkNilPairData-cpu-arguments\": 150000,\n                    \"lessThanEqualsInteger-cpu-arguments-intercept\": 145276,\n                    \"addInteger-memory-arguments-slope\": 1,\n                    \"chooseList-memory-arguments\": 32,\n                    \"constrData-memory-arguments\": 32,\n                    \"decodeUtf8-cpu-arguments-intercept\": 150000,\n                    \"equalsData-memory-arguments\": 1,\n                    \"subtractInteger-memory-arguments-slope\": 1,\n                    \"appendByteString-memory-arguments-intercept\": 0,\n                    \"lengthOfByteString-memory-arguments\": 4,\n                    \"headList-memory-arguments\": 32,\n                    \"listData-memory-arguments\": 32,\n                    \"consByteString-cpu-arguments-intercept\": 150000,\n                    \"unIData-memory-arguments\": 32,\n                    \"remainderInteger-memory-arguments-minimum\": 1,\n                    \"bData-memory-arguments\": 32,\n                    \"lessThanByteString-cpu-arguments-slope\": 248,\n                    \"encodeUtf8-memory-arguments-intercept\": 0,\n                    \"cekStartupCost-exBudgetCPU\": 100,\n                    \"multiplyInteger-memory-arguments-intercept\": 0,\n                    \"unListData-memory-arguments\": 32,\n                    \"remainderInteger-cpu-arguments-model-arguments-slope\": 118,\n                    \"cekVarCost-exBudgetCPU\": 29773,\n                    \"remainderInteger-memory-arguments-slope\": 1,\n                    \"cekForceCost-exBudgetCPU\": 29773,\n                    \"sha2_256-cpu-arguments-slope\": 29175,\n                    \"equalsInteger-memory-arguments\": 1,\n                    \"indexByteString-memory-arguments\": 1,\n                    \"addInteger-memory-arguments-intercept\": 1,\n                    \"chooseUnit-cpu-arguments\": 150000,\n                    \"sndPair-cpu-arguments\": 150000,\n                    \"cekLamCost-exBudgetCPU\": 29773,\n                    \"fstPair-cpu-arguments\": 150000,\n                    \"quotientInteger-memory-arguments-minimum\": 1,\n                    \"decodeUtf8-cpu-arguments-slope\": 1000,\n                    \"lessThanInteger-memory-arguments\": 1,\n                    \"lessThanEqualsInteger-cpu-arguments-slope\": 1366,\n                    \"fstPair-memory-arguments\": 32,\n                    \"modInteger-memory-arguments-intercept\": 0,\n                    \"unConstrData-cpu-arguments\": 150000,\n                    \"lessThanEqualsInteger-memory-arguments\": 1,\n                    \"chooseUnit-memory-arguments\": 32,\n                    \"sndPair-memory-arguments\": 32,\n                    \"addInteger-cpu-arguments-intercept\": 197209,\n                    \"decodeUtf8-memory-arguments-slope\": 8,\n                    \"equalsData-cpu-arguments-intercept\": 150000,\n                    \"mapData-cpu-arguments\": 150000,\n                    \"mkPairData-cpu-arguments\": 150000,\n                    \"quotientInteger-cpu-arguments-constant\": 148000,\n                    \"consByteString-memory-arguments-slope\": 1,\n                    \"cekVarCost-exBudgetMemory\": 100,\n                    \"indexByteString-cpu-arguments\": 150000,\n                    \"unListData-cpu-arguments\": 150000,\n                    \"equalsInteger-cpu-arguments-slope\": 1326,\n                    \"cekStartupCost-exBudgetMemory\": 100,\n                    \"subtractInteger-cpu-arguments-intercept\": 197209,\n                    \"divideInteger-cpu-arguments-model-arguments-intercept\": 425507,\n                    \"divideInteger-memory-arguments-intercept\": 0,\n                    \"cekForceCost-exBudgetMemory\": 100,\n                    \"blake2b-cpu-arguments-intercept\": 2477736,\n                    \"remainderInteger-cpu-arguments-constant\": 148000,\n                    \"tailList-cpu-arguments\": 150000,\n                    \"encodeUtf8-cpu-arguments-intercept\": 150000,\n                    \"equalsString-cpu-arguments-slope\": 1000,\n                    \"lessThanByteString-memory-arguments\": 1,\n                    \"multiplyInteger-cpu-arguments-slope\": 11218,\n                    \"appendByteString-cpu-arguments-intercept\": 396231,\n                    \"lessThanEqualsByteString-cpu-arguments-slope\": 248,\n                    \"modInteger-memory-arguments-slope\": 1,\n                    \"addInteger-cpu-arguments-slope\": 0,\n                    \"equalsData-cpu-arguments-slope\": 10000,\n                    \"decodeUtf8-memory-arguments-intercept\": 0,\n                    \"chooseList-cpu-arguments\": 150000,\n                    \"constrData-cpu-arguments\": 150000,\n                    \"equalsByteString-memory-arguments\": 1,\n                    \"cekApplyCost-exBudgetCPU\": 29773,\n                    \"quotientInteger-memory-arguments-slope\": 1,\n                    \"verifySignature-cpu-arguments-intercept\": 3345831,\n                    \"unMapData-memory-arguments\": 32,\n                    \"mkCons-memory-arguments\": 32,\n                    \"sliceByteString-memory-arguments-slope\": 1,\n                    \"sha3_256-memory-arguments\": 4,\n                    \"ifThenElse-memory-arguments\": 1,\n                    \"mkNilPairData-memory-arguments\": 32,\n                    \"equalsByteString-cpu-arguments-slope\": 247,\n                    \"appendString-cpu-arguments-intercept\": 150000,\n                    \"quotientInteger-cpu-arguments-model-arguments-slope\": 118,\n                    \"cekApplyCost-exBudgetMemory\": 100,\n                    \"equalsString-memory-arguments\": 1,\n                    \"multiplyInteger-memory-arguments-slope\": 1,\n                    \"cekBuiltinCost-exBudgetMemory\": 100,\n                    \"remainderInteger-memory-arguments-intercept\": 0,\n                    \"sha2_256-cpu-arguments-intercept\": 2477736,\n                    \"remainderInteger-cpu-arguments-model-arguments-intercept\": 425507,\n                    \"lessThanEqualsByteString-memory-arguments\": 1,\n                    \"tailList-memory-arguments\": 32,\n                    \"mkNilData-cpu-arguments\": 150000,\n                    \"chooseData-cpu-arguments\": 150000,\n                    \"unBData-memory-arguments\": 32,\n                    \"blake2b-memory-arguments\": 4,\n                    \"iData-memory-arguments\": 32,\n                    \"nullList-memory-arguments\": 32,\n                    \"cekDelayCost-exBudgetCPU\": 29773,\n                    \"subtractInteger-memory-arguments-intercept\": 1,\n                    \"lessThanByteString-cpu-arguments-intercept\": 103599,\n                    \"consByteString-cpu-arguments-slope\": 1000,\n                    \"appendByteString-memory-arguments-slope\": 1,\n                    \"trace-memory-arguments\": 32,\n                    \"divideInteger-cpu-arguments-constant\": 148000,\n                    \"cekConstCost-exBudgetCPU\": 29773,\n                    \"encodeUtf8-memory-arguments-slope\": 8,\n                    \"quotientInteger-cpu-arguments-model-arguments-intercept\": 425507,\n                    \"mapData-memory-arguments\": 32,\n                    \"appendString-cpu-arguments-slope\": 1000,\n                    \"modInteger-cpu-arguments-constant\": 148000,\n                    \"verifySignature-cpu-arguments-slope\": 1,\n                    \"unConstrData-memory-arguments\": 32,\n                    \"quotientInteger-memory-arguments-intercept\": 0,\n                    \"equalsByteString-cpu-arguments-constant\": 150000,\n                    \"sliceByteString-memory-arguments-intercept\": 0,\n                    \"mkPairData-memory-arguments\": 32,\n                    \"equalsByteString-cpu-arguments-intercept\": 112536,\n                    \"appendString-memory-arguments-slope\": 1,\n                    \"lessThanInteger-cpu-arguments-slope\": 497,\n                    \"modInteger-cpu-arguments-model-arguments-intercept\": 425507,\n                    \"modInteger-memory-arguments-minimum\": 1,\n                    \"sha3_256-cpu-arguments-intercept\": 0,\n                    \"verifySignature-memory-arguments\": 1,\n                    \"cekLamCost-exBudgetMemory\": 100,\n                    \"sliceByteString-cpu-arguments-intercept\": 150000\n                }\n            }\n        },\n        \"latestParams\": {\n            \"collateralPercentage\": 150,\n            \"costModels\": {\n                \"PlutusScriptV1\": {\n                    \"addInteger-cpu-arguments-intercept\": 205665,\n                    \"addInteger-cpu-arguments-slope\": 812,\n                    \"addInteger-memory-arguments-intercept\": 1,\n                    \"addInteger-memory-arguments-slope\": 1,\n                    \"appendByteString-cpu-arguments-intercept\": 1000,\n                    \"appendByteString-cpu-arguments-slope\": 571,\n                    \"appendByteString-memory-arguments-intercept\": 0,\n                    \"appendByteString-memory-arguments-slope\": 1,\n                    \"appendString-cpu-arguments-intercept\": 1000,\n                    \"appendString-cpu-arguments-slope\": 24177,\n                    \"appendString-memory-arguments-intercept\": 4,\n                    \"appendString-memory-arguments-slope\": 1,\n                    \"bData-cpu-arguments\": 1000,\n                    \"bData-memory-arguments\": 32,\n                    \"blake2b_256-cpu-arguments-intercept\": 117366,\n                    \"blake2b_256-cpu-arguments-slope\": 10475,\n                    \"blake2b_256-memory-arguments\": 4,\n                    \"cekApplyCost-exBudgetCPU\": 23000,\n                    \"cekApplyCost-exBudgetMemory\": 100,\n                    \"cekBuiltinCost-exBudgetCPU\": 23000,\n                    \"cekBuiltinCost-exBudgetMemory\": 100,\n                    \"cekConstCost-exBudgetCPU\": 23000,\n                    \"cekConstCost-exBudgetMemory\": 100,\n                    \"cekDelayCost-exBudgetCPU\": 23000,\n                    \"cekDelayCost-exBudgetMemory\": 100,\n                    \"cekForceCost-exBudgetCPU\": 23000,\n                    \"cekForceCost-exBudgetMemory\": 100,\n                    \"cekLamCost-exBudgetCPU\": 23000,\n                    \"cekLamCost-exBudgetMemory\": 100,\n                    \"cekStartupCost-exBudgetCPU\": 100,\n                    \"cekStartupCost-exBudgetMemory\": 100,\n                    \"cekVarCost-exBudgetCPU\": 23000,\n                    \"cekVarCost-exBudgetMemory\": 100,\n                    \"chooseData-cpu-arguments\": 19537,\n                    \"chooseData-memory-arguments\": 32,\n                    \"chooseList-cpu-arguments\": 175354,\n                    \"chooseList-memory-arguments\": 32,\n                    \"chooseUnit-cpu-arguments\": 46417,\n                    \"chooseUnit-memory-arguments\": 4,\n                    \"consByteString-cpu-arguments-intercept\": 221973,\n                    \"consByteString-cpu-arguments-slope\": 511,\n                    \"consByteString-memory-arguments-intercept\": 0,\n                    \"consByteString-memory-arguments-slope\": 1,\n                    \"constrData-cpu-arguments\": 89141,\n                    \"constrData-memory-arguments\": 32,\n                    \"decodeUtf8-cpu-arguments-intercept\": 497525,\n                    \"decodeUtf8-cpu-arguments-slope\": 14068,\n                    \"decodeUtf8-memory-arguments-intercept\": 4,\n                    \"decodeUtf8-memory-arguments-slope\": 2,\n                    \"divideInteger-cpu-arguments-constant\": 196500,\n                    \"divideInteger-cpu-arguments-model-arguments-intercept\": 453240,\n                    \"divideInteger-cpu-arguments-model-arguments-slope\": 220,\n                    \"divideInteger-memory-arguments-intercept\": 0,\n                    \"divideInteger-memory-arguments-minimum\": 1,\n                    \"divideInteger-memory-arguments-slope\": 1,\n                    \"encodeUtf8-cpu-arguments-intercept\": 1000,\n                    \"encodeUtf8-cpu-arguments-slope\": 28662,\n                    \"encodeUtf8-memory-arguments-intercept\": 4,\n                    \"encodeUtf8-memory-arguments-slope\": 2,\n                    \"equalsByteString-cpu-arguments-constant\": 245000,\n                    \"equalsByteString-cpu-arguments-intercept\": 216773,\n                    \"equalsByteString-cpu-arguments-slope\": 62,\n                    \"equalsByteString-memory-arguments\": 1,\n                    \"equalsData-cpu-arguments-intercept\": 1060367,\n                    \"equalsData-cpu-arguments-slope\": 12586,\n                    \"equalsData-memory-arguments\": 1,\n                    \"equalsInteger-cpu-arguments-intercept\": 208512,\n                    \"equalsInteger-cpu-arguments-slope\": 421,\n                    \"equalsInteger-memory-arguments\": 1,\n                    \"equalsString-cpu-arguments-constant\": 187000,\n                    \"equalsString-cpu-arguments-intercept\": 1000,\n                    \"equalsString-cpu-arguments-slope\": 52998,\n                    \"equalsString-memory-arguments\": 1,\n                    \"fstPair-cpu-arguments\": 80436,\n                    \"fstPair-memory-arguments\": 32,\n                    \"headList-cpu-arguments\": 43249,\n                    \"headList-memory-arguments\": 32,\n                    \"iData-cpu-arguments\": 1000,\n                    \"iData-memory-arguments\": 32,\n                    \"ifThenElse-cpu-arguments\": 80556,\n                    \"ifThenElse-memory-arguments\": 1,\n                    \"indexByteString-cpu-arguments\": 57667,\n                    \"indexByteString-memory-arguments\": 4,\n                    \"lengthOfByteString-cpu-arguments\": 1000,\n                    \"lengthOfByteString-memory-arguments\": 10,\n                    \"lessThanByteString-cpu-arguments-intercept\": 197145,\n                    \"lessThanByteString-cpu-arguments-slope\": 156,\n                    \"lessThanByteString-memory-arguments\": 1,\n                    \"lessThanEqualsByteString-cpu-arguments-intercept\": 197145,\n                    \"lessThanEqualsByteString-cpu-arguments-slope\": 156,\n                    \"lessThanEqualsByteString-memory-arguments\": 1,\n                    \"lessThanEqualsInteger-cpu-arguments-intercept\": 204924,\n                    \"lessThanEqualsInteger-cpu-arguments-slope\": 473,\n                    \"lessThanEqualsInteger-memory-arguments\": 1,\n                    \"lessThanInteger-cpu-arguments-intercept\": 208896,\n                    \"lessThanInteger-cpu-arguments-slope\": 511,\n                    \"lessThanInteger-memory-arguments\": 1,\n                    \"listData-cpu-arguments\": 52467,\n                    \"listData-memory-arguments\": 32,\n                    \"mapData-cpu-arguments\": 64832,\n                    \"mapData-memory-arguments\": 32,\n                    \"mkCons-cpu-arguments\": 65493,\n                    \"mkCons-memory-arguments\": 32,\n                    \"mkNilData-cpu-arguments\": 22558,\n                    \"mkNilData-memory-arguments\": 32,\n                    \"mkNilPairData-cpu-arguments\": 16563,\n                    \"mkNilPairData-memory-arguments\": 32,\n                    \"mkPairData-cpu-arguments\": 76511,\n                    \"mkPairData-memory-arguments\": 32,\n                    \"modInteger-cpu-arguments-constant\": 196500,\n                    \"modInteger-cpu-arguments-model-arguments-intercept\": 453240,\n                    \"modInteger-cpu-arguments-model-arguments-slope\": 220,\n                    \"modInteger-memory-arguments-intercept\": 0,\n                    \"modInteger-memory-arguments-minimum\": 1,\n                    \"modInteger-memory-arguments-slope\": 1,\n                    \"multiplyInteger-cpu-arguments-intercept\": 69522,\n                    \"multiplyInteger-cpu-arguments-slope\": 11687,\n                    \"multiplyInteger-memory-arguments-intercept\": 0,\n                    \"multiplyInteger-memory-arguments-slope\": 1,\n                    \"nullList-cpu-arguments\": 60091,\n                    \"nullList-memory-arguments\": 32,\n                    \"quotientInteger-cpu-arguments-constant\": 196500,\n                    \"quotientInteger-cpu-arguments-model-arguments-intercept\": 453240,\n                    \"quotientInteger-cpu-arguments-model-arguments-slope\": 220,\n                    \"quotientInteger-memory-arguments-intercept\": 0,\n                    \"quotientInteger-memory-arguments-minimum\": 1,\n                    \"quotientInteger-memory-arguments-slope\": 1,\n                    \"remainderInteger-cpu-arguments-constant\": 196500,\n                    \"remainderInteger-cpu-arguments-model-arguments-intercept\": 453240,\n                    \"remainderInteger-cpu-arguments-model-arguments-slope\": 220,\n                    \"remainderInteger-memory-arguments-intercept\": 0,\n                    \"remainderInteger-memory-arguments-minimum\": 1,\n                    \"remainderInteger-memory-arguments-slope\": 1,\n                    \"sha2_256-cpu-arguments-intercept\": 806990,\n                    \"sha2_256-cpu-arguments-slope\": 30482,\n                    \"sha2_256-memory-arguments\": 4,\n                    \"sha3_256-cpu-arguments-intercept\": 1927926,\n                    \"sha3_256-cpu-arguments-slope\": 82523,\n                    \"sha3_256-memory-arguments\": 4,\n                    \"sliceByteString-cpu-arguments-intercept\": 265318,\n                    \"sliceByteString-cpu-arguments-slope\": 0,\n                    \"sliceByteString-memory-arguments-intercept\": 4,\n                    \"sliceByteString-memory-arguments-slope\": 0,\n                    \"sndPair-cpu-arguments\": 85931,\n                    \"sndPair-memory-arguments\": 32,\n                    \"subtractInteger-cpu-arguments-intercept\": 205665,\n                    \"subtractInteger-cpu-arguments-slope\": 812,\n                    \"subtractInteger-memory-arguments-intercept\": 1,\n                    \"subtractInteger-memory-arguments-slope\": 1,\n                    \"tailList-cpu-arguments\": 41182,\n                    \"tailList-memory-arguments\": 32,\n                    \"trace-cpu-arguments\": 212342,\n                    \"trace-memory-arguments\": 32,\n                    \"unBData-cpu-arguments\": 31220,\n                    \"unBData-memory-arguments\": 32,\n                    \"unConstrData-cpu-arguments\": 32696,\n                    \"unConstrData-memory-arguments\": 32,\n                    \"unIData-cpu-arguments\": 43357,\n                    \"unIData-memory-arguments\": 32,\n                    \"unListData-cpu-arguments\": 32247,\n                    \"unListData-memory-arguments\": 32,\n                    \"unMapData-cpu-arguments\": 38314,\n                    \"unMapData-memory-arguments\": 32,\n                    \"verifyEd25519Signature-cpu-arguments-intercept\": 57996947,\n                    \"verifyEd25519Signature-cpu-arguments-slope\": 18975,\n                    \"verifyEd25519Signature-memory-arguments\": 10\n                },\n                \"PlutusScriptV2\": {\n                    \"addInteger-cpu-arguments-intercept\": 100788,\n                    \"addInteger-cpu-arguments-slope\": 420,\n                    \"addInteger-memory-arguments-intercept\": 1,\n                    \"addInteger-memory-arguments-slope\": 1,\n                    \"appendByteString-cpu-arguments-intercept\": 1000,\n                    \"appendByteString-cpu-arguments-slope\": 173,\n                    \"appendByteString-memory-arguments-intercept\": 0,\n                    \"appendByteString-memory-arguments-slope\": 1,\n                    \"appendString-cpu-arguments-intercept\": 1000,\n                    \"appendString-cpu-arguments-slope\": 59957,\n                    \"appendString-memory-arguments-intercept\": 4,\n                    \"appendString-memory-arguments-slope\": 1,\n                    \"bData-cpu-arguments\": 11183,\n                    \"bData-memory-arguments\": 32,\n                    \"blake2b_256-cpu-arguments-intercept\": 201305,\n                    \"blake2b_256-cpu-arguments-slope\": 8356,\n                    \"blake2b_256-memory-arguments\": 4,\n                    \"cekApplyCost-exBudgetCPU\": 16000,\n                    \"cekApplyCost-exBudgetMemory\": 100,\n                    \"cekBuiltinCost-exBudgetCPU\": 16000,\n                    \"cekBuiltinCost-exBudgetMemory\": 100,\n                    \"cekConstCost-exBudgetCPU\": 16000,\n                    \"cekConstCost-exBudgetMemory\": 100,\n                    \"cekDelayCost-exBudgetCPU\": 16000,\n                    \"cekDelayCost-exBudgetMemory\": 100,\n                    \"cekForceCost-exBudgetCPU\": 16000,\n                    \"cekForceCost-exBudgetMemory\": 100,\n                    \"cekLamCost-exBudgetCPU\": 16000,\n                    \"cekLamCost-exBudgetMemory\": 100,\n                    \"cekStartupCost-exBudgetCPU\": 100,\n                    \"cekStartupCost-exBudgetMemory\": 100,\n                    \"cekVarCost-exBudgetCPU\": 16000,\n                    \"cekVarCost-exBudgetMemory\": 100,\n                    \"chooseData-cpu-arguments\": 94375,\n                    \"chooseData-memory-arguments\": 32,\n                    \"chooseList-cpu-arguments\": 132994,\n                    \"chooseList-memory-arguments\": 32,\n                    \"chooseUnit-cpu-arguments\": 61462,\n                    \"chooseUnit-memory-arguments\": 4,\n                    \"consByteString-cpu-arguments-intercept\": 72010,\n                    \"consByteString-cpu-arguments-slope\": 178,\n                    \"consByteString-memory-arguments-intercept\": 0,\n                    \"consByteString-memory-arguments-slope\": 1,\n                    \"constrData-cpu-arguments\": 22151,\n                    \"constrData-memory-arguments\": 32,\n                    \"decodeUtf8-cpu-arguments-intercept\": 91189,\n                    \"decodeUtf8-cpu-arguments-slope\": 769,\n                    \"decodeUtf8-memory-arguments-intercept\": 4,\n                    \"decodeUtf8-memory-arguments-slope\": 2,\n                    \"divideInteger-cpu-arguments-constant\": 85848,\n                    \"divideInteger-cpu-arguments-model-arguments-intercept\": 228465,\n                    \"divideInteger-cpu-arguments-model-arguments-slope\": 122,\n                    \"divideInteger-memory-arguments-intercept\": 0,\n                    \"divideInteger-memory-arguments-minimum\": 1,\n                    \"divideInteger-memory-arguments-slope\": 1,\n                    \"encodeUtf8-cpu-arguments-intercept\": 1000,\n                    \"encodeUtf8-cpu-arguments-slope\": 42921,\n                    \"encodeUtf8-memory-arguments-intercept\": 4,\n                    \"encodeUtf8-memory-arguments-slope\": 2,\n                    \"equalsByteString-cpu-arguments-constant\": 24548,\n                    \"equalsByteString-cpu-arguments-intercept\": 29498,\n                    \"equalsByteString-cpu-arguments-slope\": 38,\n                    \"equalsByteString-memory-arguments\": 1,\n                    \"equalsData-cpu-arguments-intercept\": 898148,\n                    \"equalsData-cpu-arguments-slope\": 27279,\n                    \"equalsData-memory-arguments\": 1,\n                    \"equalsInteger-cpu-arguments-intercept\": 51775,\n                    \"equalsInteger-cpu-arguments-slope\": 558,\n                    \"equalsInteger-memory-arguments\": 1,\n                    \"equalsString-cpu-arguments-constant\": 39184,\n                    \"equalsString-cpu-arguments-intercept\": 1000,\n                    \"equalsString-cpu-arguments-slope\": 60594,\n                    \"equalsString-memory-arguments\": 1,\n                    \"fstPair-cpu-arguments\": 141895,\n                    \"fstPair-memory-arguments\": 32,\n                    \"headList-cpu-arguments\": 83150,\n                    \"headList-memory-arguments\": 32,\n                    \"iData-cpu-arguments\": 15299,\n                    \"iData-memory-arguments\": 32,\n                    \"ifThenElse-cpu-arguments\": 76049,\n                    \"ifThenElse-memory-arguments\": 1,\n                    \"indexByteString-cpu-arguments\": 13169,\n                    \"indexByteString-memory-arguments\": 4,\n                    \"lengthOfByteString-cpu-arguments\": 22100,\n                    \"lengthOfByteString-memory-arguments\": 10,\n                    \"lessThanByteString-cpu-arguments-intercept\": 28999,\n                    \"lessThanByteString-cpu-arguments-slope\": 74,\n                    \"lessThanByteString-memory-arguments\": 1,\n                    \"lessThanEqualsByteString-cpu-arguments-intercept\": 28999,\n                    \"lessThanEqualsByteString-cpu-arguments-slope\": 74,\n                    \"lessThanEqualsByteString-memory-arguments\": 1,\n                    \"lessThanEqualsInteger-cpu-arguments-intercept\": 43285,\n                    \"lessThanEqualsInteger-cpu-arguments-slope\": 552,\n                    \"lessThanEqualsInteger-memory-arguments\": 1,\n                    \"lessThanInteger-cpu-arguments-intercept\": 44749,\n                    \"lessThanInteger-cpu-arguments-slope\": 541,\n                    \"lessThanInteger-memory-arguments\": 1,\n                    \"listData-cpu-arguments\": 33852,\n                    \"listData-memory-arguments\": 32,\n                    \"mapData-cpu-arguments\": 68246,\n                    \"mapData-memory-arguments\": 32,\n                    \"mkCons-cpu-arguments\": 72362,\n                    \"mkCons-memory-arguments\": 32,\n                    \"mkNilData-cpu-arguments\": 7243,\n                    \"mkNilData-memory-arguments\": 32,\n                    \"mkNilPairData-cpu-arguments\": 7391,\n                    \"mkNilPairData-memory-arguments\": 32,\n                    \"mkPairData-cpu-arguments\": 11546,\n                    \"mkPairData-memory-arguments\": 32,\n                    \"modInteger-cpu-arguments-constant\": 85848,\n                    \"modInteger-cpu-arguments-model-arguments-intercept\": 228465,\n                    \"modInteger-cpu-arguments-model-arguments-slope\": 122,\n                    \"modInteger-memory-arguments-intercept\": 0,\n                    \"modInteger-memory-arguments-minimum\": 1,\n                    \"modInteger-memory-arguments-slope\": 1,\n                    \"multiplyInteger-cpu-arguments-intercept\": 90434,\n                    \"multiplyInteger-cpu-arguments-slope\": 519,\n                    \"multiplyInteger-memory-arguments-intercept\": 0,\n                    \"multiplyInteger-memory-arguments-slope\": 1,\n                    \"nullList-cpu-arguments\": 74433,\n                    \"nullList-memory-arguments\": 32,\n                    \"quotientInteger-cpu-arguments-constant\": 85848,\n                    \"quotientInteger-cpu-arguments-model-arguments-intercept\": 228465,\n                    \"quotientInteger-cpu-arguments-model-arguments-slope\": 122,\n                    \"quotientInteger-memory-arguments-intercept\": 0,\n                    \"quotientInteger-memory-arguments-minimum\": 1,\n                    \"quotientInteger-memory-arguments-slope\": 1,\n                    \"remainderInteger-cpu-arguments-constant\": 85848,\n                    \"remainderInteger-cpu-arguments-model-arguments-intercept\": 228465,\n                    \"remainderInteger-cpu-arguments-model-arguments-slope\": 122,\n                    \"remainderInteger-memory-arguments-intercept\": 0,\n                    \"remainderInteger-memory-arguments-minimum\": 1,\n                    \"remainderInteger-memory-arguments-slope\": 1,\n                    \"serialiseData-cpu-arguments-intercept\": 955506,\n                    \"serialiseData-cpu-arguments-slope\": 213312,\n                    \"serialiseData-memory-arguments-intercept\": 0,\n                    \"serialiseData-memory-arguments-slope\": 2,\n                    \"sha2_256-cpu-arguments-intercept\": 270652,\n                    \"sha2_256-cpu-arguments-slope\": 22588,\n                    \"sha2_256-memory-arguments\": 4,\n                    \"sha3_256-cpu-arguments-intercept\": 1457325,\n                    \"sha3_256-cpu-arguments-slope\": 64566,\n                    \"sha3_256-memory-arguments\": 4,\n                    \"sliceByteString-cpu-arguments-intercept\": 20467,\n                    \"sliceByteString-cpu-arguments-slope\": 1,\n                    \"sliceByteString-memory-arguments-intercept\": 4,\n                    \"sliceByteString-memory-arguments-slope\": 0,\n                    \"sndPair-cpu-arguments\": 141992,\n                    \"sndPair-memory-arguments\": 32,\n                    \"subtractInteger-cpu-arguments-intercept\": 100788,\n                    \"subtractInteger-cpu-arguments-slope\": 420,\n                    \"subtractInteger-memory-arguments-intercept\": 1,\n                    \"subtractInteger-memory-arguments-slope\": 1,\n                    \"tailList-cpu-arguments\": 81663,\n                    \"tailList-memory-arguments\": 32,\n                    \"trace-cpu-arguments\": 59498,\n                    \"trace-memory-arguments\": 32,\n                    \"unBData-cpu-arguments\": 20142,\n                    \"unBData-memory-arguments\": 32,\n                    \"unConstrData-cpu-arguments\": 24588,\n                    \"unConstrData-memory-arguments\": 32,\n                    \"unIData-cpu-arguments\": 20744,\n                    \"unIData-memory-arguments\": 32,\n                    \"unListData-cpu-arguments\": 25933,\n                    \"unListData-memory-arguments\": 32,\n                    \"unMapData-cpu-arguments\": 24623,\n                    \"unMapData-memory-arguments\": 32,\n                    \"verifyEcdsaSecp256k1Signature-cpu-arguments\": 43053543,\n                    \"verifyEcdsaSecp256k1Signature-memory-arguments\": 10,\n                    \"verifyEd25519Signature-cpu-arguments-intercept\": 53384111,\n                    \"verifyEd25519Signature-cpu-arguments-slope\": 14333,\n                    \"verifyEd25519Signature-memory-arguments\": 10,\n                    \"verifySchnorrSecp256k1Signature-cpu-arguments-intercept\": 43574283,\n                    \"verifySchnorrSecp256k1Signature-cpu-arguments-slope\": 26308,\n                    \"verifySchnorrSecp256k1Signature-memory-arguments\": 10\n                }\n            },\n            \"executionUnitPrices\": {\n                \"priceMemory\": 0.0577,\n                \"priceSteps\": 7.21e-05\n            },\n            \"maxBlockBodySize\": 90112,\n            \"maxBlockExecutionUnits\": {\n                \"memory\": 62000000,\n                \"steps\": 20000000000\n            },\n            \"maxBlockHeaderSize\": 1100,\n            \"maxCollateralInputs\": 3,\n            \"maxTxExecutionUnits\": {\n                \"memory\": 14000000,\n                \"steps\": 10000000000\n            },\n            \"maxTxSize\": 16384,\n            \"maxValueSize\": 5000,\n            \"minPoolCost\": 170000000,\n            \"monetaryExpansion\": 0.003,\n            \"poolPledgeInfluence\": 0.3,\n            \"poolRetireMaxEpoch\": 18,\n            \"protocolVersion\": {\n                \"major\": 8,\n                \"minor\": 0\n            },\n            \"stakeAddressDeposit\": 2000000,\n            \"stakePoolDeposit\": 500000000,\n            \"stakePoolTargetNum\": 500,\n            \"treasuryCut\": 0.2,\n            \"txFeeFixed\": 155381,\n            \"txFeePerByte\": 44,\n            \"utxoCostPerByte\": 4310\n        },\n        \"latestTip\": {\n            \"epoch\": 117,\n            \"hash\": \"2557d0c19d0594d665f0328cd9f94a1ab42b0f27312a2ada31300ae1d4d8b33d\",\n            \"slot\": 49046780,\n            \"time\": 1704729980000\n        }\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./common/network.ts\n"));

/***/ })

});